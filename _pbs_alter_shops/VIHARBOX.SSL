/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/******************************************************************************************
        Item: Stock for Happy Harry
        Location : Vault City
        Description: This box is for Happy Harry's Goods

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: August 22, 1998

           Updated:
******************************************************************************************/


/* Include Files */
#include "..\headers\define.h"

#define NAME                    SCRIPT_VIHARBOX

#include "..\headers\command.h"
#include "..\headers\VctyCtyd.h"
/* Defines and Macros */

#define LVAR_Restock_Time                 (0)
#define LVAR_Restock_Time_Fix             (1) //added by killap

#include "stock.h"  // by phobos2077

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;

import variable vault_city_harry_box;

procedure start begin
   vault_city_harry_box := self_obj;
end

procedure map_enter_p_proc begin
      //added by killap
   variable tmp;
   variable special_item;
   //end added 

  //added check by killap - expansion pack (Village)
  if (global_var(GVAR_VAULT_SERVANT) != SERVANT_TURNED_IN_HARRY) then begin
   vault_city_harry_box := self_obj;
   if (is_loading_game == false) then begin
   
      //added by killap - fix for game_time going negative after 7 years
      if (((game_time) < 0) and (local_var(LVAR_Restock_Time_Fix) == 0)) then begin
         set_local_var(LVAR_Restock_Time, game_time - 1);
         set_local_var(LVAR_Restock_Time_Fix, 1);
      end
      //end added   
   
      if (local_var(LVAR_Restock_Time) < game_time) then begin
         
                              //new added
      tmp := create_object(PID_FOOTLOCKER_CLEAN_LEFT,5,0);
      if (obj_is_carrying_obj_pid(self_obj, PID_NAV_COMPUTER_PARTS ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_NAV_COMPUTER_PARTS);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_NAVCOM_PARTS ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_NAVCOM_PARTS);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_COMPUTER_VOICE_MODULE ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_COMPUTER_VOICE_MODULE);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_V15_COMPUTER_PART ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_V15_COMPUTER_PART);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_GECK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_GECK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_VERTIBIRD_PLANS ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_VERTIBIRD_PLANS);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_TANKER_FOB ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_TANKER_FOB);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);   
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_CAR_FUEL_CELL ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_CAR_FUEL_CELL);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);   
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_CAR_FUEL_CELL_CONTROLLER ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_CAR_FUEL_CELL_CONTROLLER);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);   
      end 
      if (obj_is_carrying_obj_pid(self_obj, PID_CAR_FUEL_INJECTION ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_CAR_FUEL_INJECTION);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_VIC_RADIO ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_VIC_RADIO);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_VIC_WATER_FLASK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_VIC_WATER_FLASK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_HY_MAG_PART ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_HY_MAG_PART);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_DAY_PASS ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_DAY_PASS);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_FAKE_CITIZENSHIP ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_FAKE_CITIZENSHIP);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_CORNELIUS_GOLD_WATCH ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_CORNELIUS_GOLD_WATCH);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_RED_PASS_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_RED_PASS_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_BLUE_PASS_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_BLUE_PASS_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_GOLD_LOCKET ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_GOLD_LOCKET);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_YELLOW_PASS_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_YELLOW_PASS_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_ANNA_GOLD_LOCKET ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_ANNA_GOLD_LOCKET);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_TRAPPER_TOWN_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_TRAPPER_TOWN_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_GECKO_DATA_DISK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_GECKO_DATA_DISK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_REACTOR_DATA_DISK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_REACTOR_DATA_DISK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_YELLOW_REACTOR_KEYCARD ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_YELLOW_REACTOR_KEYCARD);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_RED_REACTOR_KEYCARD ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_RED_REACTOR_KEYCARD);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_PLASMA_TRANSFORMER ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_PLASMA_TRANSFORMER);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_MOORE_BAD_BRIEFCASE ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_MOORE_BAD_BRIEFCASE);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_MOORE_GOOD_BRIEFCASE ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_MOORE_GOOD_BRIEFCASE);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_LYNETTE_HOLO ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_LYNETTE_HOLO);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_WESTIN_HOLO ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_WESTIN_HOLO);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_SPY_HOLO ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_SPY_HOLO);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_DR_HENRY_PAPERS ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_DR_HENRY_PAPERS);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end      
      if (obj_is_carrying_obj_pid(self_obj, PID_PRESIDENTIAL_PASS ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_PRESIDENTIAL_PASS);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_VAULT_13_SHACK_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_VAULT_13_SHACK_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_EXCAVATOR_CHIP ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_EXCAVATOR_CHIP);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_RAMIREZ_BOX_CLOSED ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_RAMIREZ_BOX_CLOSED);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_RAMIREZ_BOX_CLOSED ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_RAMIREZ_BOX_CLOSED);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_RAMIREZ_BOX_OPEN ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_RAMIREZ_BOX_OPEN);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_RAMIREZ_BOX_CLOSED ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_RAMIREZ_BOX_CLOSED);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_BISHOPS_HOLODISK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_BISHOPS_HOLODISK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_ACCOUNT_BOOK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_ACCOUNT_BOOK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_ECON_HOLODISK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_ECON_HOLODISK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_CELL_DOOR_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_CELL_DOOR_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_SMITTY_MEAL ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_SMITTY_MEAL);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_BECKY_BOOK ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_BECKY_BOOK);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_ENLIGHTENED_ONE_LETTER ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_ENLIGHTENED_ONE_LETTER);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_K9_MOTIVATOR ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_K9_MOTIVATOR);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      if (obj_is_carrying_obj_pid(self_obj, PID_PRES_ACCESS_KEY ) > 0) then begin
         special_item := obj_carrying_pid_obj(self_obj, PID_PRES_ACCESS_KEY);
         rm_obj_from_inven(self_obj,special_item);
         add_obj_to_inven(tmp, special_item);  
      end
      //end new added
         
         destroy_obj_inven(self_obj); //added by killap - one of the preventives I am adding towards the "too many items bug"
         check_restock_item(PID_BOTTLE_CAPS, 150, 390, 100)
         check_restock_item(PID_KNIFE, 1, 3, 100)
         check_restock_item(PID_CROWBAR, 1, 2, 100)
         check_restock_item(PID_44_MAGNUM_REVOLVER, 1, 1, 100)
         //check_restock_item(PID_10MM_PISTOL, 1, 2, 100) // removed
         check_restock_item(PID_DESERT_EAGLE, 1, 1, 80)
         check_restock_item(PID_HUNTING_RIFLE, 1, 1, 50)
         check_restock_item(PID_SHOTGUN, 1, 2, 25)
         check_restock_item(PID_LEATHER_JACKET, 1, 2, 75)
         check_restock_item(PID_LEATHER_ARMOR, 1, 1, 50)
         check_restock_item(PID_44_FMJ_MAGNUM, 2, 3, 100)
         check_restock_item(PID_44_MAGNUM_JHP, 2, 3, 100)
         check_restock_item(PID_10MM_AP, 2, 3, 100)
         check_restock_item(PID_10MM_JHP, 3, 6, 100)
         check_restock_item(PID_SHOTGUN_SHELLS, 2, 5, 100)
         check_restock_item(PID_DYNAMITE, 1, 1, 50)
         check_restock_item(PID_SHOVEL, 1, 1, 50)
         check_restock_item(PID_FLARE, 1, 2, 50)
         check_restock_item(PID_BEER, 1, 1, 100)
         check_restock_item(PID_BOOZE, 1, 1, 100)
         check_restock_item(PID_ROPE, 1, 3, 50)
         check_restock_item(PID_223_FMJ, 1, 2, 100)
         check_restock_item(PID_METAL_ARMOR, 1, 1, 25)
         check_restock_item(PID_10MM_SMG, 1, 1, 50)
         check_restock_item(PID_FRAG_GRENADE, 1, 2, 50)
         // by phobos2077:
         check_restock_item(PID_PBS_50_AMMO, 1, 2, 25)
         check_restock_item(PID_PBS_THROWING_AXE, 1, 2, 25)
         check_restock_item(PID_THROWING_KNIFE, 2, 5, 100)
         check_restock_item(PID_PBS_9MM_SMG, 1, 1, 50)
         check_restock_item(PID_9MM_AMMO, 2, 5, 100) // AP ammo
         check_restock_item(PID_7_62MM_AMMO, 1, 3, 100)
         check_restock_item(PID_5MM_JHP, 1, 3, 100)
         check_restock_item(PID_PBS_M79, 1, 1, 25)
         check_restock_item(PID_PBS_40MM_HE, 1, 3, 50)
         // ;
         set_local_var(LVAR_Restock_Time, (3 * ONE_GAME_DAY) + game_time);
         
         //new added - killap
         move_obj_inven_to_obj(tmp, self_obj);
         destroy_object(tmp);
         //end new added
         
      end
   end
  end
end

procedure map_update_p_proc begin
   vault_city_harry_box := self_obj;
end

procedure pickup_p_proc begin
   if(source_obj == dude_obj) then begin
      if( is_success( roll_vs_skill( dude_obj, SKILL_STEAL, -20 ) ) == FALSE ) then begin
         script_overrides;
         set_map_var(MVAR_Stealing_From_Harry, 1 );
      end
   end
end