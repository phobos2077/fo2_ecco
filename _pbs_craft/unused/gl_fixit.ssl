procedure start;
procedure old_map_enter_p_proc;
procedure create_workbench(variable tile, variable elev);
procedure set_script_for_all_workbenches_on_map;

#include "..\!sfall\sfall.h"
#define PID_BLOCKING_HEX                    (33554499)
#define PID_WORKBENCH                    (157)
#define SCRIPT_TEST0            (2)



procedure start begin
	variable t;
	display_msg("hello world"+available_global_script_types);
	set_global_script_repeat(5000);
	//call create_workbench(tile_num_in_direction(tile_num(dude_obj), 3, 1), elevation(dude_obj));
	call set_script_for_all_workbenches_on_map;
end



procedure old_map_enter_p_proc begin
	display_msg("map enter");
end

procedure create_workbench(variable tile, variable elev)
begin
	create_object_sid(PID_WORKBENCH, tile, elev, SCRIPT_TEST0);
	create_object_sid(PID_BLOCKING_HEX, tile, elev, -1);
	tile := tile_num_in_direction(tile, 4, 1);
	create_object_sid(PID_BLOCKING_HEX, tile, elev, -1);
	create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(tile, 3, 1), elev, -1);
end

procedure set_script_for_all_workbenches_on_map
begin
	variable list := 0;
	variable obj := 0;
	variable n := 0;
	list := list_begin(1);
	obj := list_next(list);
	while(obj != 0) do begin
		if ((obj_pid(obj) == PID_WORKBENCH) and (get_script(obj) == -1)) then begin
			set_script(obj, SCRIPT_TEST0);
			n++;
		end
		obj := list_next(list);
	end
	list_end(list);
	if (n > 0) then begin
		display_msg("Converted " + n + " workbenches.");
	end
end