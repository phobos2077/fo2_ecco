/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Modoc: Jo
        Location: Modoc
        Description: He does everything.

        Log: the following defines need to be changed:


          Created: February 15, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "mcjo"
#include "../headers/define.h"

#define NAME                        SCRIPT_MCJO
#define TOWN_REP_VAR                GVAR_TOWN_REP_MODOC

#include "../headers/command.h"
#include "../headers/modoc.h"
#include "../headers/modmain.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

// dialog nodes
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure Node075;
procedure Node076;
procedure Node077;
procedure Node078;
procedure Node079;
procedure Node080;
procedure Node081;
procedure Node082;
procedure Node083;
procedure Node085;
procedure Node086;
procedure Node087;
procedure Node088;
procedure Node089;
procedure Node090;

procedure Node999;                                      // This is the do nothing node
procedure Node998;                                      // This Node is Always Combat
procedure Node996;

#define LVAR_Flags                                 (4)
#define LVAR_Home_Tile                             (5)
#define LVAR_Last_Stop_Thief_Message               (6)

#define angry_bit                                  bit_10
#define fake_known_bit                             bit_11
#define node_90_bit                                bit_12
#define karl_known_bit                             bit_13

#define angry                                      lvar_bit(LVAR_Flags, angry_bit)
#define set_angry                                  set_lvar_bit_on(LVAR_Flags, angry_bit)

#define fake_known                                 lvar_bit(LVAR_Flags, fake_known_bit)
#define set_fake_known                             set_lvar_bit_on(LVAR_Flags, fake_known_bit)

#define node_90                                    lvar_bit(LVAR_Flags, node_90_bit)
#define set_node_90                                set_lvar_bit_on(LVAR_Flags, node_90_bit)

#define karl_known                                 lvar_bit(LVAR_Flags, karl_known_bit)
#define set_karl_known                             set_lvar_bit_on(LVAR_Flags, karl_known_bit)

import variable modoc_jo_box_obj;
import variable generic_temp_box;
import variable modoc_jo_obj;
import variable ghost_farm_slag_obj;

procedure start begin
   modoc_jo_obj := self_obj;
end

procedure timed_event_p_proc begin
   if (fixed_param == param_clear_float) then begin
      float_msg(self_obj, " ", FLOAT_COLOR_NORMAL);
      float_msg(dude_obj, " ", FLOAT_COLOR_NORMAL);
      float_msg_clear(self_obj);
      float_msg_clear(dude_obj);
   end else begin
      inc_shelf_attempt;
   end
end

procedure map_enter_p_proc begin
   /*if (jo_dead) then begin
      destroy_object(self_obj);
   end*/

   //added by killap
   if (jo_dead) then begin
      if (cur_map_index == MAP_GHOST_FARM) then begin
         check_set_obj_visiblility(self_obj, true);
         destroy_object(self_obj);
      end
   end else begin
      check_show_ghost_farm_attackers
   end
   //end added by killap

   match_dude_elevation;
   modoc_jo_obj := self_obj;
   if (map_first_run) then begin
      if (cur_map_index == MAP_MODOC_MAINSTREET) then begin
         set_self_team(TEAM_MODOC);
         set_self_ai(AI_PEASANT);
      end
      set_local_var(LVAR_Home_Tile, self_tile);
      check_restock_item(PID_BOTTLE_CAPS, 20, 20, 100)
   end else if (cur_map_index != MAP_GHOST_FARM) then begin
      critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), dude_elevation);
   end

end

procedure map_update_p_proc begin
   modoc_jo_obj := self_obj;
end

procedure combat_p_proc begin
   if (dude_enemy_modoc) then begin
      if (self_team == TEAM_PLAYER) then begin
         set_self_team(TEAM_MODOC);
      end
   end else if (cur_map_index == MAP_GHOST_FARM) then begin
      set_self_team(TEAM_PLAYER);
   end
end

procedure critter_p_proc begin
variable temp_line;
   if (is_staging_wedding) then begin
      if (get_sub_stage == wedding_stage_ready) then begin
         self_rotate(3);
         gfade_in(1);
         set_next_stage_time(quick_stage_time)
         set_sub_stage(wedding_stage_dearly_beloved)
      end else if (stage_time_ready) then begin
         if (get_sub_stage == wedding_stage_dearly_beloved) then begin
            floater_good(600);
            set_next_stage_time(quick_stage_time)
            set_sub_stage(wedding_stage_ask_skip)
         end else if (get_sub_stage == wedding_stage_jo_question) then begin
            display_mstr(602 + (10*jo_dead)); // Altered by Seraph: added (10*jo_dead)
            floater(603);
            set_next_stage_time(default_stage_time)
            set_sub_stage(wedding_stage_question_response)
         end else if (get_sub_stage == wedding_stage_jo_bride_vow) then begin
            set_next_stage_time(default_stage_time)
            // build string
            temp_line := mstr(604);
            if (is_staging_miria_wedding) then begin
               temp_line += (mstr(629) + mstr(605) + dude_name + mstr(606));
            end else begin
               temp_line += (dude_name + mstr(605) +  mstr(630) + mstr(606));
            end
            if (sex_act_straight) then begin
               temp_line += mstr(625);
            end else begin
               temp_line += mstr(627);
            end
            floater_type_msg(temp_line, FLOAT_COLOR_GOOD);
            set_sub_stage(wedding_stage_bride_vow_response)
         end else if (get_sub_stage == wedding_stage_jo_groom_vow) then begin
            set_next_stage_time(default_stage_time)
            // build string
            temp_line := mstr(604);
            if (is_staging_davin_wedding) then begin
               temp_line += (mstr(630) + mstr(605) + dude_name + mstr(606));
            end else begin
               temp_line += (dude_name + mstr(605) +  mstr(629) + mstr(606));
            end
            if (sex_act_straight) then begin
               temp_line += mstr(626);
            end else begin
               temp_line += mstr(628);
            end
            floater_type_msg(temp_line, FLOAT_COLOR_GOOD);
            set_sub_stage(wedding_stage_groom_vow_response)
         end else if (get_sub_stage == wedding_stage_pronounce_married) then begin
            if (sex_act_straight) then begin
               floater_good(607);
            end else begin
               floater_good(608 + dude_is_male);
            end
            set_next_stage_time(default_stage_time)
            set_sub_stage(wedding_stage_done)
         end else if (get_sub_stage == wedding_stage_done) then begin
            gfade_out(1);
            game_ui_enable;
            clear_stage
            party_no_follow_off;
            gfade_in(1);
            set_local_var(LVAR_Home_Tile, 20143); //added by killap
         end
      end
   end else begin
      if (self_can_see_dude) then begin
         if ((hostile) or (dude_enemy_modoc)) then begin
            self_attack_dude;
         end
      end

      if (cur_map_index == MAP_GHOST_FARM) then begin
         Do_Attacking_Slag(8,5)
      end else if (local_var(LVAR_Last_Stop_Thief_Message) < shelf_attempts) then begin
         if (local_var(LVAR_Last_Stop_Thief_Message) < 3) then begin
            floater(153 + local_var(LVAR_Last_Stop_Thief_Message));
            inc_local_var(LVAR_Last_Stop_Thief_Message);
         end
         if (local_var(LVAR_Last_Stop_Thief_Message) >= 3) then begin
            ndebug("calling Node998 from critter_p_proc");
            call Node998;
         end
      end
      if (self_tile != local_var(LVAR_Home_Tile)) then begin
         anim_move_to_point(local_var(LVAR_Home_Tile))
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_enemy_modoc;
      ndebug("calling Node998 from damage_p_proc");
      call Node998;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      ndebug("BEEN CAUGHT STEALING!");
      call Node998;
   end
end

procedure start_dialog_at(variable node) begin
   move_obj_inven_to_obj(self_obj,generic_temp_box);
   move_obj_inven_to_obj(modoc_jo_box_obj,self_obj);
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call node;
      gSay_End;
      end_dialogue;
   move_obj_inven_to_obj(self_obj,modoc_jo_box_obj);
   move_obj_inven_to_obj(generic_temp_box,self_obj);
end

procedure talk_p_proc begin
   script_overrides;
   if (slags_killed_by_townspeople) then begin
      floater(150);
   end else if (cur_map_index == MAP_GHOST_FARM) then begin
      kill_them_all_floater;
   end else if (angry) then begin
      floater(331);
   end else if (get_ending_state == ending_state_happy) then begin
      gdialog_set_barter_mod(-75 if shelf_unlocked else -50);
      call start_dialog_at(@Node090);
   end else if (attack_time_set) then begin
      call start_dialog_at(@Node003);
   end else begin
      variable node;
      if ((herebefore == false) and (dude_is_married == false)) then begin
         node := @Node000;
      end else if (ghost_farm_seed_active) then begin
         node := @Node002;
      end else begin
         node := @Node001;
      end
      call start_dialog_at(node);
      set_herebefore;
   end
end

procedure destroy_p_proc begin
   inc_good_critter
   set_jo_dead;
end

procedure look_at_p_proc begin
   script_overrides;
   if (herebefore) then begin
      display_mstr_rand(102 + (1398*jo_dead),106 + (1394*jo_dead)); // Altered by Seraph
   end else begin
      display_mstr(101);
   end
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(101);
end

procedure use_skill_on_p_proc begin
end

// dialog action functions
procedure Node999 begin
  // do absolutely everything that pertains to nothing
end
procedure Node998 begin
   ndebug("Node998");
   set_hostile;
end
procedure Node996 begin
   gdialog_barter;
   if (get_ending_state == ending_state_happy) then begin
      call Node090;
   end else begin
      call Node001;
   end
end
procedure Node994 begin
   if (is_success(roll_vs_skill(dude_obj,SKILL_SPEECH,0))) then begin
      call Node021;
   end else begin
      call Node024;
   end
end
procedure Node992 begin
   inc_general_rep(REP_TOWN_JO_CHOP_FINGER);
   call Node022;
end
procedure Node991 begin
   clear_attack_slag_time;
   set_enemy_slags;
   set_wipeout_scenario_1;
   game_time_advance(ONE_GAME_DAY);
   game_time_advance_hour(100);
   set_started_slag_attack;
   load_map(MAP_GHOST_FARM,0);
end

// dialog nodes
procedure Node000 begin
   ndebug("Node000");
   Reply(156);
   NOption(157,Node010,004);
   NOption(158,Node040,004);
   if (family_feud_seed_active) then begin
      NOption(159,Node060,004);
   end
   NOption(160,Node030,-003);
end
procedure Node001 begin
   ndebug("Node001");
   Reply(161);
   if (ghost_farm_seed_unknown) then begin
      NOption(162,Node050,004);
      NOption(168,Node030,-003);
   end
   if (family_feud_seed_active) then begin
      NOption(164,Node060,004);
   end
   NOption(165,Node051,004);
   NOption(166,Node045,004);
   NOption(167,Node052,004);
   NOption(g_bye,Node999,004);
   NOption(g_grunt,Node999,-003);
end
procedure Node002 begin
   ndebug("Node002");
   Reply(169);
   if (all_slags_dead) then begin
      NOption(170,Node081,004);
      NOption(174,Node065,-003);
   end
   if (dude_has_slag_message) then begin
      NOption(171,Node070,004);
      NOption(172,Node061,-003);
   end
   NOption(173,Node064,-003);
   NOption(175,Node999,-003);
   NOption(176,Node999,004);
end
procedure Node003 begin
variable days_left;
   ndebug("Node003");
   days_left := days_till_slag_attack;
   if (attack_slag_time_up) then begin
      Reply(803);
      NOption(804,Node991,004);
      NOption(805,Node999,004); //note, this should *not* go to node991 since you say you want no part, but yet you are taken to the ghost farm - killap
   end else if (days_left == 1) then begin
      Reply(802);
   end else begin
      Reply(mstr(800) + days_left + mstr(801));
   end
   if (all_slags_dead) then begin
      NOption(170,Node085,004);
   end else begin
      if ((karl_found) and (karl_known == false)) then begin
         NOption(179,Node086,004);
      end
      if ((examined_bodies) and (fake_known == false)) then begin
         NOption(180,Node087,004);
      end
      NOption(181,Node089,004);
   end
   NOption(806,Node991,004);
   NOption(g_bye,Node999,004);
   NOption(175,Node999,-003);
end
procedure Node010 begin
   ndebug("Node010");
   Reply(182);
   NOption(183,Node011,004);
   NOption(166,Node045,004);
   NOption(167,Node052,004);
   NOption(g_bye,Node999,001);
end
procedure Node011 begin
   ndebug("Node011");
   Reply(186);
   BOption(187,Node035,004); //edit by killap was NOption
   BOption(188,Node035,004); //edit by killap was NOption
   NOption(189,Node012,004);
   NOption(g_bye,Node999,001);
end
procedure Node012 begin
   set_ghost_farm_seed_known; //moved from node050 - killap
   ndebug("Node012");
   Reply(190);
   NOption(191,Node013,001);
end
procedure Node013 begin
   ndebug("Node013");
   Reply(192);
   NOption(193,Node014,001);
end
procedure Node014 begin
   ndebug("Node014");
   Reply(194);
   NOption(195,Node015,001);
end
procedure Node015 begin
   ndebug("Node015");
   Reply(196);
   NOption(197,Node016,001);
end
procedure Node016 begin
   ndebug("Node016");
   Reply(198);
   NOption(199,Node017,001);
end
procedure Node017 begin
   ndebug("Node017");
   Reply(200);
   NOption(201,Node018,001);
end
procedure Node018 begin
   ndebug("Node018");
   Reply(202);
   NOption(203,Node019,001);
end
procedure Node019 begin
   ndebug("Node019");
   Reply(204);
   NOption(205,Node020,001);
end
procedure Node020 begin
   ndebug("Node020");
   Reply(206);
   NOption(207,Node994,004);
   NOption(208,Node022,004);
end
procedure Node021 begin
   ndebug("Node021");
   Reply(209);
   NOption(210,Node022,004);
   NOption(400,Node992,004);
   NOption(211,Node023,004);
end
procedure Node022 begin
   ndebug("Node022");
   mark_on_map(AREA_GHOST_TOWN)
   set_ghost_farm_seed_active;
   Reply(212);
   NOption(g_bye,Node999,001);
end
procedure Node023 begin
   ndebug("Node023");
   inc_general_rep(REP_TOWN_JO_CHOP_FINGER);
   Reply(213);
   NOption(g_mstr(350),Node998,001);
end
procedure Node024 begin
   ndebug("Node024");
   Reply(215);
   NOption(216,Node022,004);
   NOption(217,Node999,001);
end
procedure Node030 begin
   ndebug("Node030");
   set_ghost_farm_seed_known;
   Reply(218);
   NOption(219,Node032,-003);
   NOption(220,Node031,-003);
end
procedure Node031 begin
   ndebug("Node031");
   Reply(222);
   NOption(223,Node999,001);
end
procedure Node032 begin
   ndebug("Node032");
   Reply(224);
   NOption(225,Node033,-003);
   NOption(226,Node034,-003);
end
procedure Node033 begin
   ndebug("Node033");
   mark_area_known(MARK_TYPE_TOWN, AREA_GHOST_TOWN, MARK_STATE_KNOWN);
   set_ghost_farm_seed_active;
   Reply(227);
   NOption(228,Node999,001);
end
procedure Node034 begin
   ndebug("Node034");
   Reply(229);
   NOption(g_mstr(350),Node999,001);
end
procedure Node035 begin
   //set_ghost_farm_seed_known; //moved from node050 - killap
   ndebug("Node035");
   Reply(230);
   NOption(g_mstr(350),Node999,001);
end
procedure Node040 begin
   ndebug("Node040");
   Reply(231);
   NOption(232,Node041,004);
   NOption(233,Node042,004);
   NOption(234,Node044,004);
   NOption(235,Node043,004);
   NOption(410,Node046,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node041 begin
   ndebug("Node041");
   set_slaughter_flag;
   Reply(237);
   NOption(233,Node042,004);
   NOption(235,Node043,004);
   NOption(234,Node044,004);
   NOption(410,Node046,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node042 begin
   ndebug("Node042");
   set_rose_flag;
   Reply(242);
   NOption(232,Node041,004);
   NOption(234,Node044,004);
   NOption(235,Node043,004);
   NOption(410,Node046,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node043 begin
   ndebug("Node043");
   set_tannery_flag;
   Reply(247);
   NOption(233,Node042,004);
   NOption(232,Node041,004);
   NOption(234,Node044,004);
   NOption(410,Node046,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node044 begin
   ndebug("Node044");
   set_post_flag;
   Reply(252);
   NOption(233,Node042,004);
   NOption(232,Node041,004);
   NOption(235,Node043,004);
   NOption(410,Node046,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node045 begin
   ndebug("Node045");
   Reply(257);
   NOption(233,Node042,004);
   NOption(235,Node043,004);
   NOption(234,Node044,004);
   NOption(410,Node046,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node046 begin
   ndebug("Node046");
   Reply(500);
   NOption(233,Node042,004);
   NOption(235,Node043,004);
   NOption(234,Node044,004);
   NOption(236,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node050 begin
   ndebug("Node050");
   //set_ghost_farm_seed_known;
   Reply(262);
   NOption(263,Node011,004);
   NOption(264,Node999,001);
end
procedure Node051 begin
   ndebug("Node051");
   Reply(265);
   NOption(266,Node996,004);
   NOption(267,Node001,004);
   NOption(268,Node999,001);
end
procedure Node052 begin
   ndebug("Node052");
   Reply(269);
   NOption(270,Node053,004);
   NOption(271,Node999,001);
end
procedure Node053 begin
   ndebug("Node053");
   Reply(272);
   NOption(273,Node001,004);
   NOption(g_bye,Node999,001);
end
procedure Node060 begin
   ndebug("Node060");
   Reply(274);
   NOption(g_mstr(350),Node999,001);
end
procedure Node061 begin
   ndebug("Node061");
   set_modoc_ending_happy;
   set_kill_slag_time;
   remove_pid_qty(dude_obj, PID_SLAG_MESSAGE, 1)
   set_message_delivered; //added by killap
   set_ghost_farm_seed_inactive;
   inc_global_var_amt(GVAR_TOWN_REP_MODOC,REP_TOWN_SOLVE_GHOST_FARM_REGULAR); // Seraph's Fix: changed 'inc_global_var' to 'inc_global_var_amt'. Thanks Rob!
   inc_global_var_amt(GVAR_TOWN_REP_GHOST_FARM,REP_TOWN_SOLVE_GHOST_FARM_REGULAR); //added by killap
   display_mstr(1000);
   give_xp(EXP_SOLVE_GHOST_FARM_REGULAR);
   Reply(275);
   NOption(276,Node062,-003);
end
procedure Node062 begin
   ndebug("Node062");
   Reply(277);
   mark_gecko_on_map //added by killap
   NOption(278,Node063,-003);
   NOption(220,Node999,001);
end
procedure Node063 begin
   ndebug("Node063");
   Reply(280);
   NOption(220,Node999,001);
end
procedure Node064 begin
   ndebug("Node064");
   Reply(282);
   NOption(g_grunt,Node999,001);
end
procedure Node065 begin
   ndebug("Node065");
   set_wipeout_scenario_2;
   Reply(283);
   NOption(284,Node062,-003);
end
procedure Node070 begin
   ndebug("Node070");
   set_kill_slag_time;
   ndebug("days_till_slag_attack == " + days_till_slag_attack);
   set_modoc_ending_wipeout_1;
   remove_pid_qty(dude_obj, PID_SLAG_MESSAGE, 1)
   set_message_delivered;
   set_ghost_farm_seed_inactive;
   Reply(285);
   if ((examined_bodies) and (fake_known == false)) then begin
      NOption(286,Node071,004);
   end
   if ((karl_found) and (karl_known == false)) then begin
      NOption(288,Node086,004);
   end
   if (jonny_spoken) then begin
      NOption(289,Node079,004);
   end
   NOption(820, Node083, 004);
   NOption(821, Node080, 004);
   /*
   if (brightlight) then begin
      NOption(287,Node077,004);
   end
   */
end
procedure Node071 begin
   ndebug("Node071");
   set_fake_known;
   set_ghost_pip(state_ghost_pip_find_karl);
   Reply(290);
   if (karl_found) then begin
      NOption(288,Node075,004);
   end
   if (karl_left) then begin
      NOption(292,Node072,004);
   end else begin
      NOption(850,Node003,004);
   end
end
procedure Node072 begin
   ndebug("Node072");
   Reply(293);
   NOption(294,Node073,004);
   if (brightlight) then begin
      NOption(295,Node077,004);
   end
   NOption(296,Node080,004);
end
procedure Node073 begin
   ndebug("Node073");
   set_kill_slag_time;
   Reply(297);
   NOption(298,Node999,001);
   NOption(299,Node074,004);
end
procedure Node074 begin
   ndebug("Node074");
   Reply(300);
   NOption(301,Node999,001);
end
procedure Node075 begin
   ndebug("Node075");
   set_karl_come_home;
   set_ghost_pip(state_ghost_pip_send_karl_home); //killap's fix: changed from (state_ghost_pip_complete)
   set_karl_known;
   set_modoc_ending_happy;
   inc_global_var_amt(GVAR_TOWN_REP_MODOC,REP_TOWN_SOLVE_GHOST_FARM_BEST); // Seraph's Fix: changed 'inc_global_var' to 'inc_global_var_amt'. Thanks Rob!
   inc_global_var_amt(GVAR_TOWN_REP_GHOST_FARM,REP_TOWN_SOLVE_GHOST_FARM_BEST);  //added by killap
   display_mstr(1000);
   give_xp(EXP_SOLVE_GHOST_FARM_BEST);
   Reply(302);
   NOption(303,Node076,001);
end
procedure Node076 begin
   ndebug("Node076");
   set_shelf_unlocked;
//   set_ghost_farm_seeds_inactive; //not needed here - now done just once in Karl's script (last thing left for ghost quest)
   Reply(304);
   mark_gecko_on_map //added by killap
   NOption(g_bye,Node999,001);
end
procedure Node077 begin
   ndebug("Node077");
   Reply(305);
   NOption(306,Node078,004);
   NOption(307,Node083,004);
end
procedure Node078 begin
   ndebug("Node078");
   set_wipeout_scenario_2;
   set_modoc_ending_wipeout_2;
   set_ghost_farm_seeds_inactive;
   Reply(308);
   NOption(g_mstr(350),Node991,001);
end
procedure Node079 begin
   ndebug("Node079");
   set_wipeout_scenario_2;
   set_modoc_ending_wipeout_2;
   set_ghost_farm_seeds_inactive;
   Reply(309);
   NOption(g_mstr(350),Node991,001);
end
procedure Node080 begin
   ndebug("Node080");
   set_modoc_ending_wipeout_1;
   set_modoc_ending_wipeout_2;
   set_kill_slag_time;
   set_ghost_farm_seeds_inactive;
   inc_global_var_amt(GVAR_TOWN_REP_MODOC,REP_TOWN_SOLVE_GHOST_FARM_BAD); // Seraph's Fix: changed 'inc_global_var' to 'inc_global_var_amt'. Thanks Rob!
   inc_global_var_amt(GVAR_TOWN_REP_GHOST_FARM,REP_TOWN_SOLVE_GHOST_FARM_BAD);   //added by killap
   give_xp(EXP_SOLVE_GHOST_FARM_BAD);
   set_angry;
   Reply(310);
   mark_gecko_on_map //added by killap
   NOption(g_mstr(350),Node999,001);
end
procedure Node081 begin
   ndebug("Node081");
   set_wipeout_scenario_1;
   set_ghost_farm_seed_inactive;
   give_xp(EXP_SOLVE_GHOST_FARM_WORST);
   Reply(311);
   NOption(312,Node082,004);
   NOption(313,Node076,004);
end
procedure Node082 begin
   ndebug("Node082");
   set_angry;
   Reply(314);
   NOption(g_bye,Node999,001);
end
procedure Node083 begin
   ndebug("Node083");
   set_kill_slag_time;
   Reply(315 + (fake_known == false));
   NOption(g_bye,Node999,001);
end
procedure Node085 begin
   ndebug("Node085");
   set_ghost_farm_seeds_inactive;
   set_angry;
   Reply(317);
   NOption(g_bye,Node999,001);
end
procedure Node086 begin
   ndebug("Node086");
   set_ghost_pip(state_ghost_pip_find_karl);
   set_karl_come_home;
   set_ghost_pip(state_ghost_pip_send_karl_home); //killap's fix: changed from (state_ghost_pip_complete)
   set_karl_known;
   Reply(318);
   if (fake_known) then begin
      NOption(320,Node088,004);
   end else begin
      if (examined_bodies) then begin
         NOption(319,Node087,004);
      end
      NOption(321,Node999,001);
   end
end
procedure Node087 begin
   ndebug("Node087");
   set_fake_known;
   Reply(322);
   if (karl_known) then begin //edit by killap - was karl_found
      NOption(320,Node088,004);
   end else begin
      if (karl_found) then begin
         NOption(288,Node086,004);
      end
      NOption(321,Node999,001);
   end
end
procedure Node088 begin
   ndebug("Node088");
   set_modoc_ending_happy;
//   set_ghost_farm_seeds_inactive; //not needed here - now done just once in Karl's script (last thing for ghost quest)
   inc_global_var_amt(GVAR_TOWN_REP_MODOC,REP_TOWN_SOLVE_GHOST_FARM_BEST); // Seraph's Fix: changed 'inc_global_var' to 'inc_global_var_amt'. Thanks Rob!
   inc_global_var_amt(GVAR_TOWN_REP_GHOST_FARM,REP_TOWN_SOLVE_GHOST_FARM_BEST);  //added by killap
   give_xp(EXP_SOLVE_GHOST_FARM_BEST);
   Reply(326);
   NOption(327,Node076,004);
end
procedure Node089 begin
variable temp_msg := "";
   ndebug("Node089");
   if (fake_known == false) then begin
      temp_msg += mstr(328);
   end
   if (karl_known == false) then begin
      temp_msg += mstr(329);
   end
   Reply(temp_msg);
   NOption(330,Node999,001);
end
procedure Node090 begin
   if (node_90) then begin
      Reply(900);
   end else begin
      set_node_90;
      Reply(152);
   end
   NOption(g_grunt,Node999,-003);
   if (family_feud_seed_active) then begin
      NOption(159,Node060,004);
   end
   NOption(165,Node996,004);
   NOption(925,Node999,004);
end
