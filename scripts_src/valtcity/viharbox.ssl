/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/******************************************************************************************
        Item: Stock for Happy Harry
        Location : Vault City
        Description: This box is for Happy Harry's Goods

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: August 22, 1998

           Updated:
******************************************************************************************/


/* Include Files */
#define SCRIPT_REALNAME "viharbox"
#include "../headers/define.h"

#define NAME                    SCRIPT_VIHARBOX

#include "../headers/command.h"
#include "../headers/vctyctyd.h"
/* Defines and Macros */

#define LVAR_Restock_Time                 (0)
#define LVAR_Restock_Time_Fix             (1) //added by killap

#include "../_pbs_headers/ecco_ids.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;

import variable vault_city_harry_box;

procedure start begin
   vault_city_harry_box := self_obj;
end

procedure map_enter_p_proc begin
   //added check by killap - expansion pack (Village)
   if (global_var(GVAR_QUEST_VAULT_SERVANT) == SERVANT_TURNED_IN_HARRY) then return;

   vault_city_harry_box := self_obj;
   if (is_loading_game == false) then begin
      restock_fix
      if (local_var(LVAR_Restock_Time) < game_time) then begin
         variable tmp_box := move_critical_items();
         check_restock_item(PID_BOTTLE_CAPS, 150, 390, 100)
         check_restock_item(PID_KNIFE, 1, 3, 100)
         check_restock_item(PID_CROWBAR, 1, 2, 100)
         check_restock_item(PID_44_MAGNUM_REVOLVER, 1, 1, 100)
         //check_restock_item(PID_10MM_PISTOL, 1, 2, 100) // pbs: removed
         check_restock_item(PID_DESERT_EAGLE, 1, 1, 80)
         check_restock_item(PID_HUNTING_RIFLE, 1, 1, 50)
         check_restock_item(PID_SHOTGUN, 1, 2, 25)
         check_restock_item(PID_LEATHER_JACKET, 1, 2, 75)
         check_restock_item(PID_LEATHER_ARMOR, 1, 1, 50)
         check_restock_item(PID_44_FMJ_MAGNUM, 2, 3, 100)
         check_restock_item(PID_44_MAGNUM_JHP, 2, 3, 100)
         check_restock_item(PID_10MM_AP, 2, 3, 100)
         check_restock_item(PID_10MM_JHP, 3, 6, 100) // pbs: max from 5
         check_restock_item(PID_SHOTGUN_SHELLS, 2, 5, 100) // pbs: min/max from 1/3
         check_restock_item(PID_DYNAMITE, 1, 1, 50)
         check_restock_item(PID_SHOVEL, 1, 1, 50)
         check_restock_item(PID_FLARE, 1, 2, 50)
         check_restock_item(PID_BEER, 1, 1, 100)
         check_restock_item(PID_BOOZE, 1, 1, 100)
         check_restock_item(PID_ROPE, 1, 3, 50) // pbs: max from 1
         check_restock_item(PID_223_FMJ, 1, 2, 100)
         check_restock_item(PID_METAL_ARMOR, 1, 1, 25)
         check_restock_item(PID_10MM_SMG, 1, 1, 50)
         check_restock_item(PID_FRAG_GRENADE, 1, 2, 50)
         // by phobos2077:
         check_restock_item(PID_PBS_COWBOY_REPEATER, 1, 1, 50)
         check_restock_item(PID_PBS_50_AMMO, 1, 2, 25)
         check_restock_item(PID_PBS_THROWING_AXE, 1, 2, 25)
         check_restock_item(PID_PBS_BOOMERANG, 1, 3, 50)
         check_restock_item(PID_THROWING_KNIFE, 2, 5, 100)
         check_restock_item(PID_PBS_9MM_SMG, 1, 1, 50)
         check_restock_item(PID_9MM_AMMO, 2, 5, 100) // AP ammo
         check_restock_item(PID_7_62MM_AMMO, 1, 3, 100)
         check_restock_item(PID_5MM_JHP, 1, 3, 100)
         // ;
         call restore_critical_items(tmp_box);
         set_local_var(LVAR_Restock_Time, (3 * ONE_GAME_DAY) + game_time);
      end
   end
end

procedure map_update_p_proc begin
   vault_city_harry_box := self_obj;
end

procedure pickup_p_proc begin
   if(source_obj == dude_obj) then begin
      if( is_success( roll_vs_skill( dude_obj, SKILL_STEAL, -20 ) ) == FALSE ) then begin
         script_overrides;
         set_map_var(MVAR_Stealing_From_Harry, 1 );
      end
   end
end
