

procedure start;
variable begin
	down;
	ctrl_key;
	holster_key; healing_key; looting_key; regroup_key; spread_key; pickup_key; switch_key; ammotype_key;
	loot_items;
	current_order;
	tWaiting_time;
	oWho; iNum_npcs; sWho_name;
	L_list;
	oLooter;
	oCorpse;
	oGItem;
	tLooting_time;
	looting_stage;
	cant_carry_all;
	dude_picking_up; dude_pickup_delay;
end


procedure check_party_orders;
procedure put_away_weapon(variable oC);
procedure npc_heal_yourself(variable oC);
procedure loot_nearby_corpses(variable oC);
procedure npc_regroup(variable oC);
procedure npc_spread(variable oC);
procedure npc_switch_ammo(variable oC, variable ammo_type);

procedure find_next_corpse;
procedure cancel_looting;
procedure get_ground_item_near_critter(variable oL, variable oC);

procedure loot_n_drop(variable oL, variable oC);
procedure test_(variable item, variable n);



procedure start begin
variable begin
	iParty_members;
	temp;
end
	if (game_loaded) then begin
		set_global_script_repeat(1);
		down := 0;
		ctrl_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"CtrlKey");
		holster_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"HolsterOrderKey");
		healing_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"HealingOrderKey");
		looting_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"LootingOrderKey");
		regroup_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"RegroupOrderKey");
		spread_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"SpreadOrderKey");
		pickup_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"PickUpKey");
		switch_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"SwitchKey");
		ammotype_key := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"AmmoTypeOrderKey");
		loot_items := get_ini_setting( ( "party_op.ini|" +"SETTINGS|") +"PLootNearbyItems");

		if((ctrl_key<0)or(ctrl_key>88))then ctrl_key := 0 ;
		if((holster_key<0)or(holster_key>88))then holster_key := 35 ;
		if((healing_key<0)or(healing_key>88))then healing_key := 33 ;
		if((looting_key<0)or(looting_key>88))then looting_key := 34 ;
		if((regroup_key<0)or(regroup_key>88))then regroup_key := 19 ;
		if((spread_key<0)or(spread_key>88))then spread_key := 45 ;
		if((pickup_key<0)or(pickup_key>88))then pickup_key := 20 ;
		if((switch_key<0)or(switch_key>88))then switch_key := 11 ;
		if((ammotype_key<0)or(ammotype_key>88))then ammotype_key := 30 ;

		if((loot_items<0)or(loot_items>1)) then loot_items := 1;
		tWaiting_time := game_time;
		iNum_npcs := 0;
		oWho := 0;
		oLooter := 0;
		tLooting_time := game_time;
		looting_stage :=  (0) ;
		cant_carry_all := 0;
		set_sfall_global( "p_looter" , 0);
		set_sfall_global( "p_corpse" , 0);
		set_sfall_global( "p_gitem0" , 0);
	end
	iParty_members := metarule(16,0) -1;
	if (1) then 0;
	
	/*if ( (((ctrl_key == 0) || key_pressed(ctrl_key)) && key_pressed(holster_key)) ) then begin
		if((not down) and (tWaiting_time <= game_time)) then begin
			down:=1;
			if(iParty_members)then begin
				if(not combat_is_initialized)then begin
					current_order :=  (1) ;
					call check_party_orders;
					tWaiting_time := game_time + 1 *  (10) ;
				end
			end
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(healing_key)) ) then begin
		if((not down) and (tWaiting_time <= game_time)) then begin
			down:=1;
			if(iParty_members)then begin
				if(not combat_is_initialized)then begin
					tWaiting_time := game_time + 5 *  (10) ;
				end else begin
					tWaiting_time := game_time + 1 *  (10) ;
				end
				current_order :=  (2) ;
				call check_party_orders;
			end
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(looting_key)) ) then begin
		if(not down)then begin
			down:=1;
			if((looting_stage ==  (0) ) or (oLooter == dude_obj))then begin
				if(tWaiting_time <= game_time)then begin
					if(iParty_members)then begin
						if(not combat_is_initialized)then begin
							current_order :=  (4) ;
							call check_party_orders;
							tWaiting_time := game_time + 3 *  (10) ;
						end
					end
				end
			end else begin
				call cancel_looting;
			end
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(regroup_key)) ) then begin
		if((not down) and (tWaiting_time <= game_time)) then begin
			down:=1;
			if(iParty_members)then begin
				if(not combat_is_initialized)then begin
					current_order :=  (5) ;
					call check_party_orders;
					tWaiting_time := game_time + 5 *  (10) ;
				end
			end
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(spread_key)) ) then begin
		if((not down) and (tWaiting_time <= game_time)) then begin
			down:=1;
			if(iParty_members)then begin
				if(not combat_is_initialized)then begin
					current_order :=  (6) ;
					call check_party_orders;
					tWaiting_time := game_time + 3 *  (10) ;
				end
			end
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(pickup_key)) ) then begin
		if(not down)then begin
			down:=1;
			if(not combat_is_initialized)then begin
				if (oLooter == dude_obj) then begin
					call cancel_looting;
				end else if(get_sfall_global_int("p_opti01") == 1)then begin
					if (oLooter) then call cancel_looting;
					call loot_nearby_corpses(dude_obj);
				end else begin
					dude_picking_up := 1;
					dude_pickup_delay := game_time;
				end
			end
#line 237 "GL_ptyop.ssl"
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(ammotype_key)) ) then begin
		if((not down) and (tWaiting_time <= game_time)) then begin
			down:=1;
			if(iParty_members)then begin
				if(not combat_is_initialized)then begin
					tWaiting_time := game_time + 3 *  (10) ;
					current_order :=  (9) ;
					if ( get_sfall_global_int( "p_ammtyp" )  ==  0 ) then
						set_sfall_global( "p_ammtyp" ,  1 );
					else
						set_sfall_global( "p_ammtyp" ,  0 );
					call check_party_orders;
				end
			end
		end
	end else if( ((ctrl_key == 0 || key_pressed(ctrl_key)) && key_pressed(switch_key)) ) then begin
		if(not down)then begin
			down:=1;

			temp := get_sfall_global_int("p_opti01");
			if(temp == 1)then begin
				temp := 0;
				set_sfall_global("p_opti01", temp);
				float_msg(dude_obj, get_ini_string( ( "party_op.ini|" +"MESSAGE|") +(0)) , (2) );
			end else begin
				temp := 1;
				set_sfall_global("p_opti01", temp);
				float_msg(dude_obj, get_ini_string( ( "party_op.ini|" +"MESSAGE|") +(1)) , (3) );
			end

		end
	end else */begin
		down := 0;
		if(not combat_is_initialized)then begin

			if(oLooter)then begin
				if((looting_stage ==  (0) ) and (tLooting_time <= game_time))then begin
					if( not(party_member_obj(obj_pid(oLooter))) )then party_add(oLooter);
					if(oLooter == dude_obj)then
						temp :=  (4) ;
					else
						temp :=  (8) ;
					if(cant_carry_all == 1)then
						float_msg(oLooter, get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+ (4) )*100 +15)) ,temp);
					else if(cant_carry_all == 2)then
						float_msg(oLooter, get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+ (4) )*100 +random(20,24))) ,temp);
					oLooter := 0;
					set_sfall_global( "p_looter" , 0);
					cant_carry_all := 0;
				end else if((looting_stage ==  (1) ) and (tLooting_time <= game_time))then begin


					looting_stage += 1;
					tLooting_time := game_time;
				end else if((looting_stage ==  (2) ) and (tLooting_time <= game_time))then begin




					if( party_member_obj(obj_pid(oLooter)) )then party_remove(oLooter);

					reg_anim_func( 1 , 1 ) ;
					  reg_anim_obj_run_to_obj(oLooter, oCorpse, -1);
					reg_anim_func( 3 , 0) ;

					tLooting_time := game_time;

					if(tile_distance_objs(oLooter, oCorpse) <= 1)then begin
						looting_stage += 1;
						tLooting_time := game_time;
					end
					tLooting_time := game_time;
				end else if((looting_stage ==  (3) ) and (tLooting_time <= game_time))then begin



					if( critter_inven_obj(oCorpse, -2) >0)then begin

						reg_anim_func( 2 , oLooter) ;
						reg_anim_func( 1 , 1 ) ;
							reg_anim_animate (oLooter,  (10) , -1);
						reg_anim_func( 3 , 0) ;

						if((loot_items) and ( ( get_critter_stat(oLooter, (12) ) - has_trait( (1) , oLooter, (669) ) ) < has_trait( (1) , oCorpse, (669) ) ))then begin
							metarule(42, oCorpse) ;
							cant_carry_all := 1;
						end else begin
							if (cant_carry_all == 0) then cant_carry_all := 2;
							move_obj_inven_to_obj(oCorpse,oLooter);
						end
					end

					tLooting_time := game_time;

					oGItem := get_ground_item_near_critter(oLooter, oCorpse);
					looting_stage += 1;
				end else if((looting_stage ==  (4) ) and (tLooting_time <= game_time))then begin
					if(oGItem)then begin
						set_self(oLooter);
						pickup_obj(oGItem);
						looting_stage -= 1;
					end else begin
						oCorpse := find_next_corpse;
					end
					tLooting_time := game_time + 1 *  (10) ;
				end
			end

			if(dude_picking_up == 1) and (dude_pickup_delay <= game_time) then begin
				temp := get_ground_item_near_critter(dude_obj, dude_obj);
				if temp then begin
					set_self(dude_obj);
					pickup_obj(temp);
					dude_pickup_delay := game_time + 1 *  (10) ;
				end else begin
					dude_picking_up := 0;
				end
			end
		end else begin
			if(oLooter)then call cancel_looting;

			if dude_picking_up then dude_picking_up := 0;
		end

	end
end
procedure check_party_orders begin
variable begin
	i; sList; sList_names; npc_pid;
	oAux; iAux;
	string;
end
	string := "";
	iNum_npcs := 0;
	oWho := 0;
	sWho_name := "";
	oAux := 0;
	iAux := -1;
	i := 0;
	npc_pid := 0;
	if(current_order ==  (4) )then begin
		sList :=  ( "party_op.ini|" +"LOOTER|") ;
		sList_names :=  ( "party_op.ini|" +"N_LOOTER|") ;
	end else begin
		sList :=  ( "party_op.ini|" +"NPC|") ;
		sList_names :=  ( "party_op.ini|" +"N_NPC|") ;
	end
	while( get_ini_setting((sList)+(i))  != -1)do begin
		npc_pid :=  get_ini_setting((sList)+(i)) ;

		if( party_member_obj(npc_pid) )then begin
			if(current_order ==  (1) )then begin
				if( (((obj_item_subtype(critter_inven_obj( party_member_obj(npc_pid) ,1))) == (3) ) or ((obj_item_subtype(critter_inven_obj( party_member_obj(npc_pid) ,2))) == (3) )) )then begin
					if( get_ini_string((sList_names)+(i)) != "")then begin sWho_name := get_ini_string((sList_names)+(i)) ; end else begin sWho_name := obj_name( party_member_obj(npc_pid) ); end
					call put_away_weapon( party_member_obj(npc_pid) );
				end
			end else if(current_order ==  (2) )then begin
				if(( (get_critter_stat( party_member_obj(npc_pid) , (7) ) - get_critter_stat( party_member_obj(npc_pid) , (35) )) >=10) and (proto_data(npc_pid,11) == 0))then begin
					if( get_ini_string((sList_names)+(i)) != "")then begin sWho_name := get_ini_string((sList_names)+(i)) ; end else begin sWho_name := obj_name( party_member_obj(npc_pid) ); end
					call npc_heal_yourself( party_member_obj(npc_pid) );
				end
			end else if(current_order ==  (4) )then begin

				if( ( get_critter_stat(party_member_obj(npc_pid) , (12) ) - has_trait( (1) , party_member_obj(npc_pid) , (669) ) ) >iAux)then begin
					iAux :=  ( get_critter_stat(party_member_obj(npc_pid) , (12) ) - has_trait( (1) , party_member_obj(npc_pid) , (669) ) ) ;
					oAux :=  party_member_obj(npc_pid) ;
					if( get_ini_string((sList_names)+(i)) != "")then begin sWho_name := get_ini_string((sList_names)+(i)) ; end else begin sWho_name := obj_name( party_member_obj(npc_pid) ); end
				end
			end else if(current_order ==  (5) )then begin
				if(tile_distance(tile_num(dude_obj),tile_num( party_member_obj(npc_pid) ))> (3) )then begin
					if( get_ini_string((sList_names)+(i)) != "")then begin sWho_name := get_ini_string((sList_names)+(i)) ; end else begin sWho_name := obj_name( party_member_obj(npc_pid) ); end
					call npc_regroup( party_member_obj(npc_pid) );
				end
			end else if(current_order ==  (6) )then begin
				if(tile_distance(tile_num(dude_obj),tile_num( party_member_obj(npc_pid) ))< (5) )then begin
					if( get_ini_string((sList_names)+(i)) != "")then begin sWho_name := get_ini_string((sList_names)+(i)) ; end else begin sWho_name := obj_name( party_member_obj(npc_pid) ); end
					call npc_spread( party_member_obj(npc_pid) );
				end
			end else if(current_order ==  (9) )then begin
				if( get_ini_string((sList_names)+(i)) != "")then begin sWho_name := get_ini_string((sList_names)+(i)) ; end else begin sWho_name := obj_name( party_member_obj(npc_pid) ); end
				call npc_switch_ammo( party_member_obj(npc_pid) ,  get_sfall_global_int( "p_ammtyp" ) );
			end
		end
		i += 1;
	end
	if(current_order== (4) )then begin
		if(oAux)then begin
			if (oLooter == dude_obj) then call cancel_looting;
			call loot_nearby_corpses(oAux);
		end else begin
			display_msg( get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 + 99)) );
		end
	end


	if((iNum_npcs) or (cant_carry_all)) then begin
		i := (10+current_order)*100;
		if ((1) && (1)) then begin
			i += 10;
		end
		if(iNum_npcs>1)then begin
			string :=  get_ini_string( ( "party_op.ini|" +"MESSAGE|") +(i + 1)) ;
		end else begin
			string :=  get_ini_string( ( "party_op.ini|" +"MESSAGE|") +(i)) +" " + sWho_name;
			if(current_order ==  (5) )then string := string + "!";
			if(not cant_carry_all)then float_msg(oWho,  get_ini_string( ( "party_op.ini|" +"MESSAGE|") +(random(100,105))) ,  (8) );
		end
		float_msg(dude_obj, string,  (4) );
	end else begin


	end

	current_order :=  (0) ;
end

procedure put_away_weapon(variable oC) begin

	metarule(43, oC) ;
	reg_anim_func( 2 , oC) ;
#line 469 "GL_ptyop.ssl"
	iNum_npcs += 1;
	oWho := oC;
end
procedure npc_heal_yourself(variable oC) begin
variable begin
	roll_result;
	roll_check;
	amount_healed;
	oHealing_item;
	oDummy;
end
	reg_anim_func( 2 , oC) ;
	reg_anim_func( 1 , 1 ) ;

	if(( (get_critter_stat(oC, (7) ) - get_critter_stat(oC, (35) )) >=60)and(obj_is_carrying_obj_pid(oC,144)))then begin
		oHealing_item := obj_carrying_pid_obj(oC,144);


		rm_obj_from_inven(oC, oHealing_item);
		destroy_object(oHealing_item);
		amount_healed := 75;
		critter_heal(oC,amount_healed);
		critter_dmg(oC,9,( 0  BWOR  (256)  BWOR  (512) ));
		reg_anim_animate (oC,  (11) , -1);
		display_msg(obj_name(oC)+" " +  get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 +10)) );
	end else if(( floor(get_critter_stat(oC, (35) ) * 100/get_critter_stat(oC, (7) )) <=75) and (not combat_is_initialized))then begin
		roll_result := random(0,100) +  (has_skill(oC, (6) + (has_skill(oC, (7) )>has_skill(oC, (6) )) )) ;
		roll_check := random(0,100);

		if (roll_result>=roll_check) then begin
			amount_healed := floor(20 * roll_result / 100);
			critter_heal(oC,amount_healed);
			display_msg(obj_name(oC) + " "+ get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 +12))
				+" "+amount_healed+" "+ get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 +13)) );
		end else begin
			display_msg(obj_name(oC) + " "+ get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 +14)) );
		end
		reg_anim_animate (oC,  (11) , -1);
	end else if(obj_is_carrying_obj_pid(oC,40))then begin
		oHealing_item := obj_carrying_pid_obj(oC,40);




		rm_obj_from_inven(oC, oHealing_item);
		destroy_object(oHealing_item);
		amount_healed := random(10,20);
		critter_heal(oC,amount_healed);
		reg_anim_animate (oC,  (11) , -1);
		display_msg(obj_name(oC) + " "+ get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 +11)) );
	end else begin
		display_msg(obj_name(oC) + " "+ get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+current_order)*100 +15)) );
	end
	reg_anim_func( 3 , 0) ;

	iNum_npcs += 1;
	oWho := oC;
end

procedure loot_nearby_corpses(variable oC) begin
	oLooter := oC;
	L_list:=list_begin( (0) );
	while(L_list != 0) do begin
		oCorpse:=list_next(L_list);
		if (oCorpse) then begin
			if(( (critter_state(oCorpse) bwand (1) ) ))then begin
				if( not(get_proto_data(obj_pid(oCorpse), (32) ) BWAND 64 ) )then begin
					if( (tile_distance_objs(dude_obj,oCorpse) <= 24 ) )then begin
						oGItem := get_ground_item_near_critter(oC,oCorpse);
						if((oGItem) or ( ( critter_inven_obj(oCorpse, -2) != 0) ))then begin
							set_sfall_global( "p_looter" , oLooter);
							set_sfall_global( "p_corpse" , oCorpse);
							iNum_npcs += 1;
							oWho := oC;
							looting_stage :=  (1) ;
							list_end(L_list);
							L_list:=0;
							return;
						end
					end
				end
			end
		end else begin
			set_sfall_global( "p_corpse" , 0);
			looting_stage :=  (0) ;
			list_end(L_list);
			L_list:=0;
			return;
		end
	end
end

procedure npc_regroup(variable oC) begin
variable begin
	tile1;
end
	tile1 := tile_num_in_direction(tile_num(dude_obj),(random(0,5)),(2+random(0,1)));
	reg_anim_func( 2 , oC) ;
	reg_anim_func( 1 , 1 ) ;
	  reg_anim_obj_run_to_tile(oC, tile1, -1);
	reg_anim_func( 3 , 0) ;

	iNum_npcs += 1;
	oWho := oC;
end

procedure npc_spread(variable oC) begin
variable begin
	tile1; dir1;
end
	dir1 := rotation_to_tile(tile_num(dude_obj),tile_num(oC));
#line 583 "GL_ptyop.ssl"
	tile1 := tile_num_in_direction(tile_num(oC), dir1, random(4, 6));
	reg_anim_func( 2 , oC) ;
	reg_anim_func( 1 , 1 ) ;
	  reg_anim_obj_run_to_tile(oC, tile1, -1);
	reg_anim_func( 3 , 0) ;

	iNum_npcs += 1;
	oWho := oC;
end

procedure npc_switch_ammo(variable oC, variable ammo_type) begin
variable begin
	i;
	weapon := 0;
	ammo := 0;
	list;
	item;
	caliber;
end
	i := 1;
    while (i <= 2) do begin
      weapon := critter_inven_obj(critter, i);
      if (weapon and obj_item_subtype(weapon) ==  (3) ) then begin
        list := inven_as_array(critter);
	    foreach item in list begin
	      if ( (obj_item_subtype(item) == (4) ) ) then if (get_proto_data(obj_pid(item), PRODATA_IT_AM_CALIBER) == )
	    end
      end
      i++;
    end
end

procedure find_next_corpse begin
variable c;
	L_list:=list_begin( (0) );
	while(L_list != 0) do begin
		c:=list_next(L_list);
		if(c)then begin
			if(( (critter_state(c) bwand (1) ) ))then begin
				if( not(get_proto_data(obj_pid(c), (32) ) BWAND 64 ) )then begin
					if( ( (tile_distance_objs(oLooter,c) <= 24 ) or (tile_distance_objs(dude_obj,c) <= 24 ) ) )then begin
						oGItem := get_ground_item_near_critter(oLooter,c);
						if((oGItem) or ( ( critter_inven_obj(c, -2) != 0) ))then begin
							set_sfall_global( "p_corpse" , c);
							looting_stage :=  (1) ;
							list_end(L_list);
							L_list:=0;
							return (c);
						end
					end
				end
			end
		end else begin
			set_sfall_global( "p_corpse" , 0);
			looting_stage :=  (0) ;
			list_end(L_list);
			L_list:=0;
			return (0);
		end
	end
end
procedure cancel_looting begin
	if(oLooter)then begin
		reg_anim_func( 2 , oLooter) ;
		if( not(party_member_obj(obj_pid(oLooter))) )then party_add(oLooter);
		looting_stage :=  (0) ;
		if((iNum_npcs) and (oLooter != dude_obj))then begin
			float_msg(dude_obj,  get_ini_string( ( "party_op.ini|" +"MESSAGE|") +((10+ (4) )*100 +10)) +" "+ sWho_name, (4) );
			float_msg(oLooter,  get_ini_string( ( "party_op.ini|" +"MESSAGE|") +(random(100,105))) , (8) );
		end
		oLooter := 0;
		oCorpse := 0;
		set_sfall_global( "p_looter" , 0);
		set_sfall_global( "p_corpse" , 0);
	end
	if(L_list)then begin
		list_end(L_list);
		L_list:=0;
	end
end
procedure get_ground_item_near_critter(variable oL, variable oC) begin
variable begin
	l_gitems; gitem;
	iAmmo_count; iAmmo_weight; iClip_size; num_clips;
	iItem_weight;
end
	if(loot_items)then begin
		l_gitems:=list_begin( (1) );
		while(l_gitems != 0) do begin
			gitem:=list_next(l_gitems);
			if(gitem)then begin

				if( (obj_item_subtype(gitem) != (1) ) and ( not((obj_pid(gitem)>=205)and(obj_pid(gitem)<=210)) )  and  (tile_distance_objs(oC,gitem)<= 3 ) )then begin
					iItem_weight := proto_data(obj_pid(gitem), (13) );
					if( (obj_item_subtype(gitem) == (3) ) )then begin
						iAmmo_count := get_weapon_ammo_count(gitem);
						if(iAmmo_count > 0)then begin
							iAmmo_weight := proto_data(get_weapon_ammo_pid(gitem), (13) );
							iClip_size := get_proto_data(get_weapon_ammo_pid(gitem),40);
							num_clips := floor(iAmmo_count/iClip_size);
							if(iAmmo_count % iClip_size != 0) then num_clips += 1;
							iItem_weight := iItem_weight + (iAmmo_weight * num_clips);
						end
					end
					if( ( get_critter_stat(oL, (12) ) - has_trait( (1) , oL, (669) ) ) >=iItem_weight)then begin
						list_end(l_gitems);
						l_gitems := 0;
						set_sfall_global( "p_gitem0" , gitem);
						if (cant_carry_all == 0) then cant_carry_all := 2;
						return gitem;
					end else begin
						cant_carry_all := 1;
					end
				end
			end else begin
				list_end(l_gitems);
				l_gitems := 0;
				set_sfall_global( "p_gitem0" , 0);
				return 0;
			end
		end
	end else begin
		return 0;
	end
end

procedure loot_n_drop(variable oL, variable oC) begin
#line 738 "GL_ptyop.ssl"
end
procedure test_(variable item, variable n) begin
variable begin
	i; temp;
end
	display_msg(obj_name(item));
	display_msg("----------------");
	i:=0;
	while(i <= 69) do begin
		temp := get_proto_data(obj_pid(item),i);
		if(temp != 0)then display_msg(i+": "+(temp));
		i += 1;
	end
end
