/**
   Damage bonus for throwing weapons based on Throwing skill.
*/

#include "../sfall/sfall.h"
#include "../sfall/define_lite.h"
#include "../sfall/lib.arrays.h"
#include "../_pbs_headers/ecco.h"

variable
   ini_damage_bonus_skill_mult;

procedure start;
procedure itemdamage_handler;

procedure start begin
   if game_loaded then begin
      if not get_int_from_ini(INI_COMBAT, "THROWING", "damage_bonus") then begin
         return;
      end

      int_from_ini_file(damage_bonus_skill_mult, INI_COMBAT, "THROWING");

      register_hook_proc(HOOK_ITEMDAMAGE, itemdamage_handler);
   end
end

/*
   HOOK_ITEMDAMAGE
   Runs when retrieving the damage rating of the player's used weapon. (Which may be their fists.)

   int     arg0 - The default min damage
   int     arg1 - The default max damage
   Item    arg2 - The weapon used (0 if unarmed)
   Critter arg3 - The critter doing the attacking
   int     arg4 - The type of attack
   int     arg5 - non-zero if this is an attack using a melee weapon

   int     ret0 - Either the damage to be used, if ret1 isn't given, or the new minimum damage if it is
   int     ret1 - The new maximum damage
*/
procedure itemdamage_handler begin
	variable dmgMin, dmgMax, weapon, attacker, attackType, isMelee;
	variable weaponPid, skill, attackModes, attackMode, damageType;

   dmgMin := get_sfall_arg;
   dmgMax := get_sfall_arg;
   weapon := get_sfall_arg;
   attacker := get_sfall_arg;
   attackType := get_sfall_arg; 
   isMelee := get_sfall_arg;
   
   if (weapon) then begin
      weaponPid := obj_pid(weapon);
      damageType := get_proto_data(weaponPid, 48);
      //debug_msg("itemdamage: "+dmgMin+"-"+dmgMax+", wpn: "+weaponPid+", type: "+attackType+", dmg typ: "+damageType);

      if (damageType == DMG_normal_dam and attackType >= ATKTYPE_LWEP1 and attackType <= ATKTYPE_RWEP2) then begin
         // actual weapon attack mode
         attackMode := weapon_attack_mode(weaponPid, attackType);
         //debug_msg("atkmode: " + attackMode);
         if (attackMode == ATTACK_MODE_THROW) then begin
            skill := has_skill(attacker, SKILL_THROWING);
            if (skill < 0) then skill := 0;

            //agility := get_critter_stat(attacker, STAT_ag) - 5;
            //if (agility < 0) then agility := 0;

            // orig. method (skill only):
            dmgMax := floor(dmgMax * (1 + skill * ini_damage_bonus_skill_mult / 100.0));
            // method 1:
            // dmgMax := floor(dmgMax * (1 + (agility / 5) + (skill / 100.0)));
            // method 2: (me not like it)
            // dmgMax := dmgMax + agility + (skill / 20);
            // method 3 (combined):
            //dmgMax := dmgMax + agility + floor(dmgMax * (skill / 100.0));
            debug_msg("Bump throw dmg (sk:"+skill+"): "+dmgMin+"-"+dmgMax);
         end
      end
   end

   set_sfall_arg(0, dmgMin);
   set_sfall_arg(1, dmgMax);
   set_sfall_return(dmgMin);
   set_sfall_return(dmgMax);
end
