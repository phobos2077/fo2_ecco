/**
 * Spray settings mod.
 * - Allows to configure distribution of bullets in FO2's compute_spray function for every weapon PID via INI file.
 * - This includes mult/div ratio for center vs side and target vs center (see INI for detailed explanation and examples).
 */

#define SCRIPT_REALNAME    "gl_spray_settings"

#include "..\sfall\define_lite.h"
#include "..\sfall\define_extra.h"
#include "..\sfall\sfall.h"
#include "..\sfall\lib.strings.h"
#include "..\sfall\lib.arrays.h"
#include "..\sfall\lib.inven.h"
#include "..\_pbs_headers\ecco.h"

#define INI_FILE     "ecco\\spray_settings.ini"

variable
   ini_pid_to_settings,
   last_pid;

procedure start;
procedure tohit_handler;

procedure start begin
   variable rawSettings, k, v, pid, settings;
   if game_loaded then begin
      rawSettings := get_ini_section(INI_FILE, "SPRAY_SETTINGS");
      ini_pid_to_settings := create_array_map;
      foreach (k: v in rawSettings) begin
         pid := atoi(k);
         settings := string_split_ints(v, ",");
         if (pid != 0 and len_array(settings) >= 4) then begin
            fix_array(settings);
            ini_pid_to_settings[pid] := settings;
         end else begin
            debug_err("wrong item in settings: "+k+"="+v);
         end
      end
      debug_log("Loaded "+len_array(ini_pid_to_settings)+" pid settings.");
      register_hook_proc(HOOK_TOHIT, tohit_handler);
   end
end

procedure _name(variable a) begin
   if not(a) then return "NULL";
   return obj_name(a);//+"("/*+obj_type(a)+","*/+obj_pid(a)+")";
end

/*
   HOOK_TOHIT
   Runs when Fallout is calculating the chances of an attack striking a target. Runs after the hit chance is fully calculated normally, including applying the 95% cap.

   int     arg0 - The hit chance (capped)
   Critter arg1 - The attacker
   Critter arg2 - The target of the attack
   int     arg3 - The targeted bodypart
   int     arg4 - Source tile (may differ from attacker's tile, when AI is considering potential fire position)
   int     arg5 - Attack Type (see ATKTYPE_* constants)
   int     arg6 - Ranged flag. 1 if the hit chance calculation takes into account the distance to the target. This does not mean the attack is a ranged attack
   int     arg7 - The raw hit chance before applying the cap

   int     ret0 - the new hit chance
*/
procedure tohit_handler begin
   variable
      attacker := get_sfall_arg_at(1),
      attackType := get_sfall_arg_at(5),
      item,
      settings;

   if (attacker) then begin
      item := item_by_attack_type(attacker, attackType);
      if (item and last_pid != obj_pid(item)) then begin
         settings := ini_pid_to_settings[obj_pid(item)];
         if (settings) then begin
            set_spray_settings(settings[0], settings[1], settings[2], settings[3]);
            debug_log("spray_settings: spray settings set: "+debug_array_str(settings));
         end else begin
            set_spray_settings(1, 3, 1, 2); // reset to vanilla
            debug_log("spray_settings: spray settings set to default!");
         end
         last_pid := obj_pid(item);
      end
   end
end
