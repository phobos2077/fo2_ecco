/**

   Used as a workaround to fix incorrect ammo PIDs and counts for weapons 
   and ammo stack sizes for existing items on maps
   
   DEPRECETED, don't use

*/


procedure start;

#include "sfall.h"
#include "define_lite.h"
#include "mod.h"

procedure start begin
variable begin
	critter;
	item;
	number;
	reason;
	
	ammoPid;
	ammoCal;
	ammoMax;
end
   if init_hook then begin
   
   end else begin
      critter:=get_sfall_arg;
      item:=get_sfall_arg;
      number:=get_sfall_arg;
      reason:=get_sfall_arg;
      
      //display_msg("removeinvenobj:" + /*"(cr: " + critter + ") " + */item + " " +proto_data(obj_pid(item), it_name)+" x" + number + ", reason: " + sprintf("0x%X",reason));
      
      if (item) then begin
         // fixes for items saved on maps
         if (reason == RMOBJ_EQUIP_WEAPON or reason == RMOBJ_REPLACE_WEAPON or reason == RMOBJ_TRADE) then begin
            if (obj_item_subtype(item) == item_type_weapon and get_weapon_ammo_pid(item) > 0) then begin
               // fix wrong ammo type and amount loaded in guns
               ammoCal := get_proto_data(obj_pid(item), PROTO_WP_CALIBER); // proper caliber
               ammoPid := get_proto_data(obj_pid(item), PROTO_WP_AMMO_PID); // proper default ammo
               ammoMax := get_proto_data(obj_pid(item), PROTO_WP_MAG_SIZE); // proper max ammo
               if (get_proto_data(get_weapon_ammo_pid(item), PROTO_AM_CALIBER) != ammoCal) then
                  set_weapon_ammo_pid(item, ammoPid);
               if (get_weapon_ammo_count(item) > ammoMax) then
                  set_weapon_ammo_count(item, ammoMax);
            end else if (obj_item_subtype(item) == item_type_ammo) then begin
               // fix incorrect pack sizes for ammo
               ammoMax := get_proto_data(obj_pid(item), PROTO_AM_PACK_SIZE);
               if (get_weapon_ammo_count(item) > ammoMax) then
                  set_weapon_ammo_count(item, ammoMax);
            end
         end
      end
   end
end

