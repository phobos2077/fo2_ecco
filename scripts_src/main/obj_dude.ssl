/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/* This is a very special script. This is the only script that
   goes anywhere in the game. This is the script that is attached
   to the obj_dude in the game. Only very specific things need to be
   in here.
   -rwh [2/23/1998]
*/

#define SCRIPT_REALNAME "obj_dude"
#include "../headers/define.h"

#define NAME                    SCRIPT_OBJ_DUDE

#include "../headers/command.h"
#include "../headers/newreno.h"
#include "../headers/v13.h"
#include "../headers/newr1.h" //added by killap
#include "../sfall/sfall.h"

#include "../_pbs_craft/test0.ssl"

#define LVAR_Last_Digest_Time    (0)

#define DRTROY_INJECTION          (1)
//Set for Entrance level of Vault 15
#define CHECK_DUDE_V15ENT_LEVEL   (2)
//For the random bess encounter:
#define CHECK_RNDBESS_FLOAT       (3)

#define TIMER_INIT_V13_SEQUENCE    (4)

#define TRAGIC_ADDICTION           (5) //added by killap

#define LVAR_Applied_Tragic_Addiction (1) //added by killap

#define LVAR_Smoke_Count              (2) //added by killap

//For the random bess encounter
#define BESS_DEATH_TILE     19894
#define BESS_FLOAT_DISTANCE 10

//added by killap - for smoking animations
#define SMOKE_NONPOWER      6
#define SMOKE_POWER         7
#define HIGH_SEQUENCE       8

procedure start;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure map_update_p_proc;
procedure is_dropping_p_proc;
procedure description_p_proc;

procedure Check_Bess_Float;

variable Did_Bess_Float;
import variable prize_fighter_obj;
variable lastmsg;

variable took_soda;
variable took_rocks;
variable gave_warning;
variable gave_warning2;
variable warning_timer;
variable rocks_timer;
variable soda_timer;
variable count;
//added by killap
variable stats_check;
variable did_stats_check;
variable alcohol_addict := 0;
//end added

procedure combat_p_proc begin
   if (cur_map_index == MAP_NEW_RENO_2) then begin
      if (prize_fighter_obj == 0) then begin
      end else if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
         if (currently_fighting) then begin
            if (round_time_over) then begin
               nr_add_timer_event_tic(prize_fighter_obj, 0, round_over_param);
            end else if ((is_critter_prone(dude_obj)) or (is_critter_prone(prize_fighter_obj))) then begin
               nr_add_timer_event_tic(prize_fighter_obj, 0, knockout_param);
            end
         end
      end
   end
end

procedure start begin
   // initialize stomach
   if (local_var(LVAR_Last_Digest_Time) == 0) then begin
      set_local_var(LVAR_Last_Digest_Time,game_time);
      dude_eat_food(starting_stomach_full);
   end
end

procedure is_dropping_p_proc begin
   variable armor;
   variable obj;

   obj := obj_pid(source_obj);

   if (obj == PID_GECK) then begin
      script_overrides;
      display_msg(g_mstr(1099));
   end else if ( (obj == PID_VAULT_BOXER_MALE_NORMAL) or (obj == PID_VAULT_BOXER_MALE_LONG_HAIR) or (obj == PID_VAULT_BOXER_MALE_BALD) ) then begin
      script_overrides;
      if (obj == PID_VAULT_BOXER_MALE_NORMAL) then begin
         armor := dude_item(PID_VAULT_BOXER_MALE_NORMAL);
         wield_obj_critter(dude_obj, armor);
      end else if (obj == PID_VAULT_BOXER_MALE_LONG_HAIR) then begin
         armor := dude_item(PID_VAULT_BOXER_MALE_LONG_HAIR);
         wield_obj_critter(dude_obj, armor);
      end else if (obj == PID_VAULT_BOXER_MALE_BALD) then begin
         armor := dude_item(PID_VAULT_BOXER_MALE_BALD);
         wield_obj_critter(dude_obj, armor);
      end
   end
end

procedure map_enter_p_proc begin
/*
   variable Outdoor;
   variable Doctor;
   variable First_Aid;
   variable tail;
   variable flower;
   variable root;
   variable item;
   variable count;
   variable count1;
   variable Junkit;
   variable Junkit1;

   if (not(is_loading_game)) then begin
       if (self_item_count(PID_SCORPION_TAIL)) then begin
           First_Aid:=has_skill(self_obj,SKILL_FIRST_AID);
           Outdoor:=has_skill(self_obj,SKILL_OUTDOORSMAN);
           if (((First_Aid + Outdoor) >= 125) and (skill_success(self_obj,SKILL_SCIENCE,0))) then begin
               tail:=self_item(PID_SCORPION_TAIL);
               count:=self_item_count(PID_SCORPION_TAIL);
               Junkit:=rm_mult_objs_from_inven(self_obj,tail,count);
               item:=create_object(PID_ANTIDOTE,0,0);
               add_mult_objs_to_inven(self_obj,item,count);
               display_msg(g_mstr(1050));
           end
       end
       if ((self_item_count(PID_XANDER_ROOT)) and (self_item_count(PID_BROC_FLOWER))) then begin
           Doctor:=has_skill(self_obj,SKILL_DOCTOR);
           Outdoor:=has_skill(self_obj,SKILL_OUTDOORSMAN);
           if (((Doctor + Outdoor) >= 125) and (skill_success(self_obj,SKILL_SCIENCE,0))) then begin
               flower:=self_item(PID_BROC_FLOWER);
               root:=self_item(PID_XANDER_ROOT);
               count:=self_item_count(PID_BROC_FLOWER);
               count1:=self_item_count(PID_XANDER_ROOT);
               if (count > count1) then
                   count:=count1;
               Junkit:=rm_mult_objs_from_inven(self_obj,flower,count);
               Junkit1:=rm_mult_objs_from_inven(self_obj,root,count);
               item:=create_object(PID_HEALING_POWDER,0,0);
               add_mult_objs_to_inven(self_obj,item,count);
               display_msg(g_mstr(1051));
           end
       end
   end
*/
end

procedure timed_event_p_proc begin
/*   if (fixed_param == DRTROY_INJECTION) then begin
      critter_damage(self_obj,400);
      display_msg(g_mstr(400));
   end else */if (fixed_param == CHECK_DUDE_V15ENT_LEVEL) then begin
      if (global_var(GVAR_NCR_V15_DARION_DEAL) == 3 and global_var(GVAR_NCR_V15_DARION_DEAD)) then begin
         move_to(dude_obj, dude_tile, 1);
         fadein(1);
      end
   end else if (fixed_param == CHECK_RNDBESS_FLOAT) then begin
      if (not Check_Bess_Float) then
         add_timer_event(dude_obj, 1, CHECK_RNDBESS_FLOAT);
   end else if (fixed_param == TIMER_INIT_V13_SEQUENCE) then begin
      set_global_var(GVAR_DUDE_START_SEQ_1, game_time + (ONE_GAME_WEEK * 2));
   //added by killap
   end else if (fixed_param == TRAGIC_ADDICTION) then begin
      if (global_var(GVAR_ADDICT_TRAGIC) == 1) then
         set_global_var(GVAR_ADDICT_TRAGIC,0);
   end else if (fixed_param == SMOKE_NONPOWER) then begin
      script_overrides;
      reg_anim_clear(self_obj);
      reg_anim_begin();
         reg_anim_animate(self_obj, ANIM_jump_begin, -1);
         reg_anim_play_sfx(self_obj, "zippo", 10);
      reg_anim_end();
   end else if (fixed_param == SMOKE_POWER) then begin
      script_overrides;
   	reg_anim_clear(self_obj);
   	reg_anim_begin();
   	reg_anim_animate(self_obj, ANIM_falling, -1);
   	reg_anim_play_sfx(self_obj, "powr", 6);
   	reg_anim_animate(self_obj, ANIM_jump_begin, -1);
   	reg_anim_play_sfx(self_obj, "zippo", 9);
   	reg_anim_animate_reverse(self_obj, 5, -1);
   	reg_anim_play_sfx(self_obj, "powrb", 8);
   	reg_anim_end();
   end else if (fixed_param == HIGH_SEQUENCE) then begin
      if (count == 3) then begin
         float_msg(dude_obj, message_str(SCRIPT_ZISMOKE,210), FLOAT_MSG_GREEN);
      end else if (count == 4) then begin
         float_msg(dude_obj, message_str(SCRIPT_ZISMOKE,211), FLOAT_MSG_GREEN);
         script_overrides;
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate_reverse(dude_obj, 37, -1);
            reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
         reg_anim_end();
      end else if (count == 5) then begin
         display_msg(message_str(SCRIPT_ZISMOKE, 212));
         float_msg(dude_obj, message_str(SCRIPT_ZISMOKE,213), FLOAT_MSG_GREEN);
      end else if (count == 6) then begin
         float_msg(dude_obj, message_str(SCRIPT_ZISMOKE,214), FLOAT_MSG_GREEN);
      end else if (count == 7) then begin
         script_overrides;
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
      end else if (count == 8) then begin
         float_msg(dude_obj, message_str(SCRIPT_ZISMOKE,215), FLOAT_MSG_GREEN);
      end else if (count == 9) then begin
         float_msg(dude_obj, message_str(SCRIPT_ZISMOKE,216), FLOAT_MSG_RED);
         display_msg(message_str(SCRIPT_ZISMOKE, 217));
         script_overrides;
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_fall_front, -1);
         reg_anim_end();
      end else if (count == 10) then begin
         script_overrides;
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         gfade_out(600);
         display_msg(message_str(SCRIPT_ZISMOKE, 218));
         game_time_advance((13 - dude_endurance)* ONE_GAME_HOUR);
         gfade_in(600);
      end

      count := count + 1;

      if (count > 10) then begin
         count := 0;
         game_ui_enable;
      end else begin
         add_timer_event(self_obj, game_ticks(4), HIGH_SEQUENCE);
      end

   end
   //end added by killap
end

procedure map_update_p_proc begin
   variable x;
   variable days_since_exposed;

   // digest food
   x := amt_food_digested_in_time(local_var(LVAR_Last_Digest_Time));
   if (x > 0) then begin
      dude_eat_food(-x);
   end
   //MUTATION CODE
   if (global_var(GVAR_HAVE_MUTATED) == 0) then begin
      if (global_var(GVAR_MUTATE_STAGE) > 0) then begin
         days_since_exposed := GAME_TIME_IN_DAYS - global_var(GVAR_MUTATE_WHEN);
         //ndebug("days since exposed "+days_since_exposed);
         if (days_since_exposed > 30) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 5) then begin
               display_msg(mstr(140));
               set_global_var(GVAR_MUTATE_STAGE,5);
               set_global_var(GVAR_HAVE_MUTATED,1);
            end
         end
         else if (days_since_exposed > 25) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 4) then begin
               display_msg(mstr(130));
               set_global_var(GVAR_MUTATE_STAGE,4);
            end
         end
         else if (days_since_exposed > 20) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 3) then begin
               display_msg(mstr(120));
               set_global_var(GVAR_MUTATE_STAGE,3);
            end
         end
         else if (days_since_exposed > 15) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 2) then begin
               display_msg(mstr(110));
               set_global_var(GVAR_MUTATE_STAGE,2);
            end
         end
      end//if mutate_stage>0
   end//if have_mutated=0
   if (self_obj) then begin
      if (self_item(PID_GECK) and not global_var(GVAR_GAVE_GECK_EXP)) then begin
         set_global_var(GVAR_GAVE_GECK_EXP, 1);
         display_msg(mstr(150) + EXP_GOT_GECK + mstr(151));
         give_exp_points(EXP_GOT_GECK);
      end
   end

end


procedure critter_p_proc begin
   if (global_var(GVAR_DUDE_START_SEQ_1) != 0) then begin
      if (game_time > global_var(GVAR_DUDE_START_SEQ_1) and not v13_status(FLG_GRUTHAR_DEAD) and cur_map_index != MAP_VAULT_13 and (global_var(GVAR_SCHREBER_DEAD) < 1)) then begin
 // Seraph's Code: "added global_var(GVAR_SCHREBER_DEAD) < 1"
         ON_VAULT13_SEQ;
         set_global_var(GVAR_DUDE_START_SEQ_1, 0);
      end
   end

   //added by killap - expansion
   if (global_var(GVAR_RESERVED_VAR59) > 0) then begin
      if ( (((game_time - soda_timer)  >= ONE_GAME_HOUR) and (soda_timer != 0)) or (((game_time - rocks_timer)  >= ONE_GAME_HOUR) and (rocks_timer != 0)) )then begin
         set_global_var(GVAR_RESERVED_VAR59,0);
         soda_timer := 0;
         rocks_timer := 0;
      end
   end

   if (global_var(GVAR_RESERVED_VAR59) == 1) then begin
      if ((took_soda) == 1) then
        set_global_var(GVAR_RESERVED_VAR59,3);
      took_rocks:=1;
      rocks_timer:= game_time;
   end

   if (global_var(GVAR_RESERVED_VAR59) == 2) then begin
      if ((took_rocks) == 1) then
         set_global_var(GVAR_RESERVED_VAR59,3);
      took_soda:=1;
      soda_timer:= game_time;
   end

   if ((global_var(GVAR_RESERVED_VAR59) == 2) or (global_var(GVAR_RESERVED_VAR59) == 1) or (global_var(GVAR_RESERVED_VAR59) == 0) ) then begin
   end else
   if ((global_var(GVAR_RESERVED_VAR59) == 3) and (gave_warning != 1)) then begin
      gave_warning:=1;
      display_msg(mstr(600));
      warning_timer:=game_time + game_ticks(10);
   end else begin
      if ( (game_time >= warning_timer) and (gave_warning2 !=1)) then begin
         gave_warning2 := 1;
         warning_timer := game_time + game_ticks(3);
         display_msg(mstr(601));
         //critter_dmg(dude_obj,9999,6);
      end else if ((game_time >= warning_timer) and (gave_warning2 == 1)) then begin
         explosion(dude_tile, dude_elevation, 999999);
      end
   end
   //end added
end

procedure use_obj_on_p_proc begin
   variable temp;

   //added by killap - expansion
   //- player has 10% chance of becoming addicted to alcohol
   if ( (obj_pid(obj_being_used_with) == PID_BEER) or (obj_pid(obj_being_used_with) == PID_BOOZE) or
   (obj_pid(obj_being_used_with) == PID_GAMMA_GULP_BEER) or (obj_pid(obj_being_used_with) == PID_ABBEY_BOOZE) or
   (obj_pid(obj_being_used_with) == PID_ROENTGEN_RUM) ) then begin
      if (random(1,100) <= 10) then begin
         if (alcohol_addict == 0) then begin
            display_msg(mstr(500));
            set_critter_stat(dude_obj, STAT_pe, -2);
            //code from Timeslip to force the addiction tag to appear
            if not(is_iface_tag_active(4)) then
               show_iface_tag(4);
            set_global_var(GVAR_ALCOHOL_ADDICT,1);
            alcohol_addict := 1;
         end
      end
   end
   //end added

   if (source_obj == dude_obj) then begin
      // this is related to filling the player's stomach when they eat
      if (pid_is_drink_pid(obj_being_used_with)) then begin
         dude_eat_food(drink_meal);
      end else if (pid_is_snack_pid(obj_being_used_with)) then begin
         dude_eat_food(snack_meal);
      end else if (pid_is_light_meal_pid(obj_being_used_with)) then begin
         dude_eat_food(light_meal);
      end else if (pid_is_medium_meal(obj_being_used_with)) then begin
         dude_eat_food(medium_meal);
      end else if (pid_is_large_meal(obj_being_used_with)) then begin
         dude_eat_food(large_meal);
      end else if (pid_is_huge_meal(obj_being_used_with)) then begin
         dude_eat_food(huge_meal);
      end


      //added by killap - expansion
      //pop rock/soda explosion
      if (obj_pid(obj_being_used_with) == PID_POP_ROCKS) then begin
         script_overrides;
         rm_obj_from_inven(dude_obj,obj_being_used_with);
         destroy_object(obj_being_used_with);
         set_global_var(GVAR_RESERVED_VAR59,1);
      end

      if (obj_pid(obj_being_used_with) == PID_NUKA_COLA) then begin
         if (global_var(GVAR_RESERVED_VAR59) > 0) then begin
            script_overrides;
            rm_obj_from_inven(dude_obj,obj_being_used_with);
            destroy_object(obj_being_used_with);
         end
         set_global_var(GVAR_RESERVED_VAR59,2);
      end

      //smoking animations - regular cigs
      if ((dude_is_male) and (obj_pid(obj_being_used_with) == PID_CIGARETTE)) then begin
         if not (combat_is_initialized) then begin
            if ( ((obj_pid(dude_armor) == PID_POWERED_ARMOR) or (obj_pid(dude_armor) == PID_HARDENED_POWER_ARMOR)) and (dude_item_count(PID_LIGHTER) >= 1)) then begin
            	script_overrides;
            	if (local_var(LVAR_Smoke_Count) == 0) then
            	  display_msg(message_str(SCRIPT_ZISMOKE, 100));
            	else
            	  display_msg(message_str(SCRIPT_ZISMOKE, 101));

            	add_timer_event(dude_obj, 1, SMOKE_POWER);

            	set_local_var(LVAR_Smoke_Count,local_var(LVAR_Smoke_Count)+1);

            	if ((local_var(LVAR_Smoke_Count)%10) == 0) then begin
                  script_overrides;
                  display_msg(message_str(SCRIPT_ZISMOKE, 103));
                  set_global_var(GVAR_PLAYER_SMOKER,1);
                  rm_obj_from_inven(dude_obj,obj_being_used_with);
               end

            end

            else if ( (obj_pid(dude_armor) == PID_ADVANCED_POWER_ARMOR) or (obj_pid(dude_armor) == PID_ADVANCED_POWER_ARMOR_MK2) ) then begin
            	script_overrides;
               display_msg(message_str(SCRIPT_ZISMOKE, 102));
            end

            else if ((source_obj == dude_obj) and (dude_item_count(PID_LIGHTER) >= 1)) then begin
            	script_overrides;
            	if (local_var(LVAR_Smoke_Count) == 0) then
            	  display_msg(message_str(SCRIPT_ZISMOKE, 100));
            	else
            	  display_msg(message_str(SCRIPT_ZISMOKE, 101));

            	add_timer_event(dude_obj, 1, SMOKE_NONPOWER);

            	set_local_var(LVAR_Smoke_Count,local_var(LVAR_Smoke_Count)+1);

               if ((local_var(LVAR_Smoke_Count)%10) == 0) then begin
                  script_overrides;
                  display_msg(message_str(SCRIPT_ZISMOKE, 103));
                  set_global_var(GVAR_PLAYER_SMOKER,1);
                  rm_obj_from_inven(dude_obj,obj_being_used_with);
               end
            end

            if (dude_item_count(PID_LIGHTER) == 0) then begin
               script_overrides;
               display_msg(message_str(SCRIPT_ZISMOKE, 104));
            end

         end
      end

      //smoking animations - marijuana from EPA
      if ((dude_is_male) and (obj_pid(obj_being_used_with) == PID_DRUGS)) then begin
         if not (combat_is_initialized) then begin
            game_ui_disable;
            if ( ((obj_pid(dude_armor) == PID_POWERED_ARMOR) or (obj_pid(dude_armor) == PID_HARDENED_POWER_ARMOR)) and (dude_item_count(PID_LIGHTER) >= 1)) then begin
            	script_overrides;
            	display_msg(message_str(SCRIPT_ZISMOKE, 200));

            	add_timer_event(dude_obj, 1, SMOKE_POWER);

            end

            else if ( (obj_pid(dude_armor) == PID_ADVANCED_POWER_ARMOR) or (obj_pid(dude_armor) == PID_ADVANCED_POWER_ARMOR_MK2) ) then begin
            	script_overrides;
               display_msg(message_str(SCRIPT_ZISMOKE, 102));
            end

            else if ((source_obj == dude_obj) and (dude_item_count(PID_LIGHTER) >= 1)) then begin
            	script_overrides;
            	display_msg(message_str(SCRIPT_ZISMOKE, 200));

            	add_timer_event(dude_obj, 1, SMOKE_NONPOWER);

            end

            if (dude_item_count(PID_LIGHTER) == 0) then begin
               script_overrides;
               display_msg(message_str(SCRIPT_ZISMOKE, 104));
               game_ui_enable;
            end

            count := count + 1;

            if (count > 10) then begin
               count := 0;
            end else begin
               add_timer_event(self_obj, game_ticks(3), HIGH_SEQUENCE);
            end

            rm_obj_from_inven(dude_obj,obj_being_used_with);
         end
      end
      //end added

      //fix for items that have scripts attached - believed that this is the cause of the "too many items bug" - killap
      if (not(combat_is_initialized)) then begin
         if (obj_pid(obj_being_used_with) == PID_ANNA_DIARY) then begin //added in RP
            script_overrides;
            if (global_var(GVAR_PIP_BOY_ANNA_DIARY)) then begin
               display_msg(message_str(SCRIPT_DIDIARY, 102));
            end else begin
               set_global_var(GVAR_PIP_BOY_ANNA_DIARY,1);
               display_msg(message_str(SCRIPT_DIDIARY, 101));
               give_xp(EXP_READ_ANNA_DIARY);
            end
         end else if (obj_pid(obj_being_used_with) == PID_EPA_SYRINGE) then begin //added in RP
            script_overrides;
            gfade_out(ONE_GAME_SECOND*2);
               game_time_advance(ONE_GAME_HOUR*2);
               set_critter_stat(dude_obj, STAT_ag, 1);
               display_msg(message_str(SCRIPT_EPAI44, 101));
               float_msg(dude_obj,message_str(SCRIPT_EPAI44, 100),FLOAT_MSG_BLUE);
            gfade_in(ONE_GAME_SECOND*2);
            script_overrides;
            scr_return(1);
         end else if (obj_pid(obj_being_used_with) == PID_CHINESE_ARMY_MANUAL) then begin //added in RP
            script_overrides;
            gfade_out(ONE_GAME_SECOND);
               display_msg(mstr(400));
               critter_mod_skill(dude_obj, SKILL_SNEAK, 5);
               critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 5);
            gfade_in(ONE_GAME_SECOND);
            script_overrides;
            scr_return(1);
         end else if (obj_pid(obj_being_used_with) == PID_CATS_PAW_ISSUE_5) then begin
            script_overrides;
            gfade_out(ONE_GAME_SECOND);
               critter_mod_skill(dude_obj, SKILL_ENERGY_WEAPONS, 10);
               display_msg(message_str(SCRIPT_NICATPW5, 100));
            gfade_in(ONE_GAME_SECOND);
            script_overrides;
            scr_return(1);
         end else if (obj_pid(obj_being_used_with) == PID_RAIDERS_MAP) then begin
            script_overrides;
            gfade_out(ONE_GAME_SECOND);
               set_raiders_secret_enterance;
               display_msg(message_str(SCRIPT_NIRAIMAP, 100));
            gfade_in(ONE_GAME_SECOND);
            script_overrides;
            scr_return(1);
         end else if (obj_pid(obj_being_used_with) == PID_RANGER_MAP) then begin
            script_overrides;
            gfade_out(ONE_GAME_SECOND);
               mark_area_known(0, AREA_RANGER_SAFE1, MARK_STATE_KNOWN);
               mark_area_known(0, AREA_RANGER_SAFE2, MARK_STATE_KNOWN);
               mark_area_known(0, AREA_RANGER_SAFE3, MARK_STATE_KNOWN);
               display_msg(message_str(SCRIPT_SIRNGMAP, 100));
            gfade_in(ONE_GAME_SECOND);
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_SURVEY_MAP) then begin
            script_overrides;
            gfade_out(ONE_GAME_SECOND);
               display_msg(message_str(SCRIPT_EISANMAP, 100));
               mark_san_francisco_on_map
            gfade_in(ONE_GAME_SECOND);
            script_overrides;
            scr_return(1);
         end else if (obj_pid(obj_being_used_with) == PID_MAGIC_8_BALL) then begin
            script_overrides;
            if (dude_luck <= 3) then
               temp := random( 199, 228 );
            else if (dude_luck < 9) then
               temp := random( 200, 228 );
            else if ( dude_luck >= 9 ) then
               temp := random( 200, 243 );
            if (temp == 232) then begin
               set_global_var(GVAR_8_BALL_TOILET_SECRET, true);
            end else if (temp == 233) then begin
               set_global_var(GVAR_8_BALL_TRASH_SECRET, true);
            end else if (temp == 243) then begin
               set_global_var(GVAR_8_BALL_VAULT_TERMINAL, 1);
            end
            script_overrides;
            display_msg(message_str(SCRIPT_ZI8BALL, temp));
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_ENCLAVE_HOLODISK_5) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_MB_OUTSIDE) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_MB_OUTSIDE,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_ENCLAVE_HOLODISK_1) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_MB_LEVEL_1) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_MB_LEVEL_1,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_ENCLAVE_HOLODISK_2) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_MB_LEVEL_2) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_MB_LEVEL_2,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_ENCLAVE_HOLODISK_3) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_MB_LEVEL_3) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_MB_LEVEL_3,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_ENCLAVE_HOLODISK_4) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_MB_LEVEL_4) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_MB_LEVEL_4,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_EVACUATION_HOLODISK) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_SIERRA_EVACUATION) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_SIERRA_EVACUATION,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_EXPERIMENT_HOLODISK) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_SIERRA_EXP_LOG) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_SIERRA_EXP_LOG,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_MEDICAL_HOLODISK) then begin
            script_overrides;
            if (global_var(GVAR_HOLODISK_SIERRA_MED_LOG) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_HOLODISK_SIERRA_MED_LOG,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_SIERRA_MISSION_HOLODISK) then begin
            script_overrides;
            if (global_var(GVAR_SIERRA_MISSION_HOLODISK) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_SIERRA_MISSION_HOLODISK,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_BROADCAST_HOLODISK) then begin
            script_overrides;
            if (global_var(GVAR_SIERRA_GNN_HOLODISK) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_SIERRA_GNN_HOLODISK,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if ( (obj_pid(obj_being_used_with) == PID_ELRON_TEACH_HOLO) or (obj_pid(obj_being_used_with) == PID_ELRON_MEMBER_HOLO)) then begin
            script_overrides;
            if (global_var(GVAR_ELRON_HOLODISK) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_ELRON_HOLODISK,DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end else if (obj_pid(obj_being_used_with) == PID_NCR_HISTORY_HOLODISK) then begin
            script_overrides;
            if (global_var(GVAR_NCR_HISTORY_HOLO_DOWNLOAD) != DOWNLOAD_HOLODISK) then begin
               gfade_out(ONE_GAME_SECOND);
                  set_global_var(GVAR_NCR_HISTORY_HOLO_DOWNLOAD, DOWNLOAD_HOLODISK);
                  display_msg(message_str(SCRIPT_WIEVCDSK, 102));
               gfade_in(ONE_GAME_SECOND);
            end else begin
               display_msg(message_str(SCRIPT_WIEVCDSK, 101));
            end
            script_overrides;
            scr_return(0);
         end
      end
      //end fix
   end
end

procedure Check_Bess_Float begin
   if (tile_distance(BESS_DEATH_TILE, dude_tile) < BESS_FLOAT_DISTANCE) then begin
      if (not Did_Bess_Float) then begin
         Did_Bess_Float := 1;
         float_msg(dude_obj, mstr(141), FLOAT_MSG_NORMAL);
      end
      return 1;
   end
   return 0;
end


// by phobos2077:
procedure description_p_proc begin
    if (not(combat_is_initialized)) then begin
       script_overrides;
       call batch_init; // crafting menu
    end
end

