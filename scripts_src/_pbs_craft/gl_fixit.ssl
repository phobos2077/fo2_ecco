procedure start;

#include "..\sfall\sfall.h"
#include "..\sfall\define_lite.h"
#include "..\sfall\lib.misc.h"
#include "..\sfall\dik.h"

#define PID_BLOCKING_HEX             (33554499)
#define PID_WORKBENCH                (157)
#define SCRIPT_TEST0                 (2)

#include "mrfixit.h"

procedure close_dialog;
procedure show_dialog;

variable ini_fixit_hotkey;
variable warning_msg, mouse_over, button_pressed, batch_scheduled;

#define SGVAR_FIXIT_BUTTON    "openbutt"
#define SFX_BUTTON_DOWN       "butin4"
#define SFX_BUTTON_UP         "IB2LU1X1"
#define SFX_ERROR             "IISXXXX1"
#define PCX_BUTTON_DOWN       "PCX/mfdown.pcx"
#define PCX_BUTTON_UP         "PCX/mfup.pcx"


procedure warning_combat begin
   if (warning_msg == false) then begin
      warning_msg := true;
      play_sfx(SFX_ERROR);
      sfall_func2("message_box", "Mr.Fixit not available in combat!", MSGBOX_NORMAL);
      warning_msg := false;
   end
end


procedure keypress_handler begin
   variable pressed := get_sfall_arg,
            key := get_sfall_arg;
   if (pressed) then begin
      if (hotkey_pressed_now(ini_fixit_hotkey, key)) then begin
         if combat_is_initialized then
            call warning_combat;
         else if (not(get_game_mode) and mode <= 0) then begin
            call batch_init;
      	end
      end else if (mode > 0) then begin
         if (key == DIK_ESCAPE) then begin
            call exit_mode;
            tap_key(DIK_ESCAPE);
         end else if (key >= DIK_1 and key <= DIK_9) then begin
            cur_section_start := key - DIK_1;
            display_msg("go "+cur_section_start);
            call item_options_mode;
            //tap_key(DIK_ESCAPE);
         end
      end
   end
end

// Player has the cursor on the button?
procedure do_on begin
   mouse_over := true;
end

procedure do_off begin
   if (button_pressed) then play_sfx(SFX_BUTTON_UP);
   mouse_over := false;
   button_pressed := false;
end

procedure do_down begin
   if (button_pressed == false) then begin
      button_pressed := true;
      play_sfx(SFX_BUTTON_DOWN);
   end
end

procedure do_up begin
   button_pressed := false;

   if combat_is_initialized then begin
      play_sfx(SFX_BUTTON_UP);
      call warning_combat;
   end
   else if (not(get_game_mode) and mode <= 0) then begin
      //set_sfall_global("openfixi", 1);
      play_sfx(SFX_BUTTON_UP);
      //call batch_init in 1;
      batch_scheduled := true;
      set_global_script_repeat(5);
   end
end

// Create the button
procedure create_button begin
   variable screenCenterX;
   if (get_sfall_global_int(SGVAR_FIXIT_BUTTON) == 0) then begin
      set_sfall_global(SGVAR_FIXIT_BUTTON, 1);

      // We now reset everything, to make the button work in any case.
      //set_sfall_global("openfixi", 0);

      screenCenterX  := (get_screen_width / 2);

      if ((get_ini_setting("f2_res.ini|IFACE|IFACE_BAR_WIDTH") != 800) or (screenCenterX < 400)) then begin
         screenCenterX -= 80;
      end

      create_win("helwin", (screenCenterX + 248), (get_screen_height - 90), 20, 18);
      SelectWin("helwin");
      AddButton("but", 0, 0, 20, 18);
      AddButtonGFX("but", PCX_BUTTON_DOWN, PCX_BUTTON_UP, PCX_BUTTON_UP);
      AddButtonProc("but", do_on, do_off, do_down, do_up);
      ShowWin;
   end
end

// Delete the button, duh.
procedure delete_button begin
   if (get_sfall_global_int(SGVAR_FIXIT_BUTTON) > 0) then begin
      set_sfall_global(SGVAR_FIXIT_BUTTON, 0);
      mouse_over := 0;
      DeleteWin("helwin");
   end
end


procedure gamemodechange_handler begin
   if (get_game_mode == 0 or get_game_mode bwand COMBAT) then begin
      call create_button;
   end
   else begin
      call delete_button;
   end
end

procedure start begin
	if (game_loaded) then begin
		ini_fixit_hotkey := parse_hotkey(cfg_fixit_hotkey);
		register_hook_proc(HOOK_KEYPRESS, keypress_handler);
      register_hook_proc(HOOK_GAMEMODECHANGE, gamemodechange_handler);

      set_sfall_global(SGVAR_FIXIT_BUTTON, 0);

      call create_button;

      set_global_script_type(1);
	end else begin
      debug_msg("gl_fixit repeats");
      if (batch_scheduled) then begin
         batch_scheduled := false;
         call batch_init;
      end
      set_global_script_repeat(0);
   end
end

