/**
 * Main crafting system script.
 * 
 * - Shows crafting button on main UI.
 * - Opens crafting window via button or hotkey.
 * 
 * by phobos2077
 * 
 * inspired by Mr.Fixit mod by Team-X and Fix-Boy mod by Lexx.
 */

procedure start;
procedure create_button;
procedure delete_button;

#include "..\sfall\sfall.h"
#include "..\sfall\define_lite.h"
#include "..\sfall\lib.misc.h"
#include "..\sfall\dik.h"

#include "crafting.h"

variable crafting_hotkey;
variable warning_msg, show_crafting_scheduled, crafting_button_shown, screen_center_x;

#define WIN_CRAFT_BTN         "helwin"
#define SFX_BUTTON_DOWN       "butin4"
#define SFX_BUTTON_UP         "IB2LU1X1"
#define SFX_ERROR             "IISXXXX1"
#define PCX_BUTTON_DOWN       pcx_path(mfdown)
#define PCX_BUTTON_UP         pcx_path(mfup)


procedure warning_combat begin
   if (warning_msg == false) then begin
      warning_msg := true;
      play_sfx(SFX_ERROR);
      sfall_func2("message_box", mstr_craft(121), MSGBOX_NORMAL);
      warning_msg := false;
   end
end


procedure keypress_handler begin
   variable pressed := get_sfall_arg,
            key := get_sfall_arg,
            optionProc,
            oldMode, oldPos;
   if (pressed) then begin
      if (hotkey_pressed_now(crafting_hotkey, key)) then begin
         if combat_is_initialized then
            call warning_combat;
         else if (not(get_game_mode) and craft_ui_mode <= MODE_EXIT) then begin
            show_crafting_scheduled := true;
            set_global_script_repeat(5);
      	end
      end else if (craft_ui_mode > MODE_EXIT) then begin
         oldMode := craft_ui_mode;
         oldPos := cur_pos;
         if (key == DIK_ESCAPE) then begin
            call exit_mode;
         end else if (key >= DIK_1 and key <= DIK_9) then begin
            if (craft_ui_mode == MODE_ITEM_OPTIONS) then begin
               if (key == DIK_1 and max_batch > 0) then
                  call batch_one_item;
               else if (key == DIK_2 and max_batch > 1) then
                  call batch_all_items;
               else if (key == DIK_3 and max_undo > 0) then
                  call undo_one_item;
               else if (key == DIK_4 and max_undo > 1) then
                  call undo_all_items;
            end else if (craft_ui_mode == MODE_ITEMS_LIST or craft_ui_mode == MODE_CATEGORY_LIST) then begin
               optionProc := "item_options_" + (key - DIK_1);
               debug_msg("select " + optionProc); // this debug is needed to prevent stupid optimizer from removing the string!
               call optionProc;
            end
         end else if (key == DIK_0 and craft_ui_mode <= MODE_UNDO_OK) then begin
            if (craft_ui_mode == MODE_ITEM_OPTIONS) then
               call items_list_mode;
            else if (craft_ui_mode == MODE_ITEMS_LIST and use_categories) then
               call item_categories_mode;
            else if (craft_ui_mode >= MODE_BATCH_OK) then
               call item_options_mode;
         end else if (key == DIK_COMMA and craft_ui_mode == MODE_ITEMS_LIST and has_prev_page) then begin
            call list_back_proc;
         end else if (key == DIK_PERIOD and craft_ui_mode == MODE_ITEMS_LIST and has_next_page) then begin
            call list_next_proc;
         end
         if (craft_ui_mode != oldMode or cur_pos != oldPos) then
            SayQuit; // Quit from SayEnd loop
      end
   end
end

// Player has the cursor on the button?
procedure do_on begin
end

procedure do_off begin
   if (button_pressed) then play_sfx(SFX_BUTTON_UP);
   button_pressed := false;
end

procedure do_down begin
   if (button_pressed == false) then begin
      button_pressed := true;
      play_sfx(SFX_BUTTON_DOWN);
   end
end

procedure do_up begin
   button_pressed := false;

   if combat_is_initialized then begin
      play_sfx(SFX_BUTTON_UP);
      call warning_combat;
   end
   else if (not(get_game_mode) and craft_ui_mode <= 0) then begin
      play_sfx(SFX_BUTTON_UP);
      //call show_crafting_window in 1; // this doesn't work
      show_crafting_scheduled := true;
      set_global_script_repeat(5);
   end
end

// Create the button
procedure create_button begin
   if crafting_button_shown then return;

   create_win_flag(WIN_CRAFT_BTN, (screen_center_x + 238), (get_screen_height - 98), 24, 23, WIN_FLAG_DONTMOVE bwor WIN_FLAG_TRANSPARENT);
   SelectWin(WIN_CRAFT_BTN);
   AddButton("but", 0, 0, 24, 23);
   AddButtonGFX("but", PCX_BUTTON_DOWN, PCX_BUTTON_UP, PCX_BUTTON_UP);
   AddButtonProc("but", do_on, do_off, do_down, do_up);
   ShowWin;
   crafting_button_shown := true;
end

procedure delete_button begin
   if not crafting_button_shown then return;
   
   crafting_button_shown := false;
   DeleteWin(WIN_CRAFT_BTN);
end

procedure gamemodechange_handler begin
   variable gameExit := get_sfall_arg;
   if (not (get_game_mode bwand (LOADGAME bwor LOCALMAP bwor WORLDMAP)) and not gameExit) then begin
      call create_button;
   end
   else begin
      call delete_button;
   end
end

procedure start begin
	if (game_loaded) then begin
      call init_crafting;
		crafting_hotkey := parse_hotkey(craft_raw_cfg.Main.hotkey);
		register_hook_proc(HOOK_KEYPRESS, keypress_handler);
      register_hook_proc(HOOK_GAMEMODECHANGE, gamemodechange_handler);

      screen_center_x  := (get_screen_width / 2);
      if ((get_ini_setting("f2_res.ini|IFACE|IFACE_BAR_WIDTH") != 800) or (screen_center_x < 400)) then begin
         screen_center_x -= 80;
      end
      call create_button;

      set_global_script_type(1);
	end else begin
      //debug_msg("gl_fixit repeats");
      if (show_crafting_scheduled) then begin
         show_crafting_scheduled := false;
         call show_crafting_window;
      end
      set_global_script_repeat(0);
   end
end
