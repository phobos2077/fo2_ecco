variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure use_p_proc;
procedure damage_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure use_obj_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

import variable modoc_jo_obj;
import variable modoc_jo_box_obj;

variable caught_tamper;
variable user_obj;
variable temp_roll;

procedure timed_event_p_proc;
procedure use_skill_on_p_proc;

#include "stock.h"

procedure checkPartyMembersNearDoor
begin
	if (party_member_obj(16777278) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777376) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777377) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777305) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777313) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777323) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777352) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777378) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777368) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777379) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777380) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777295) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777381) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777407) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777411) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777412) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777413) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777481) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777558) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777600) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777718) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777718)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777719) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777719)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777720) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777720)) <= 5) then begin
			return 1;
		end
	end
	return 0;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
	if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
		move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
	end
	if (metarule(22, 0) == 0) then begin
		if (not((global_var(297) bwand 524288) != 0)) then begin
			if ((game_time < 0) and (local_var(2) == 0)) then begin
				set_local_var(1, game_time - 1);
				set_local_var(2, 1);
			end
			if (local_var(1) < game_time) then begin
				global_temp := create_object_sid(128, 0, 0, -1);
				move_obj_inven_to_obj(self_obj, global_temp);
				destroy_object(global_temp);
				check_restock_item(PID_ROPE, 1, 2, 100)
				check_restock_item(PID_10MM_JHP, 1, 2, 100)
				if (global_var(388) > 1) then begin
				  check_restock_item(PID_SHOTGUN, 1, 1, 100)
				  check_restock_item(PID_HUNTING_RIFLE, 1, 1, 100)
				  check_restock_item(PID_SHOTGUN_SHELLS, 1, 2, 100)
				  check_restock_item(PID_COMBAT_KNIFE, 1, 2, 75)
				  check_restock_item(PID_7_62MM_AMMO, 1, 1, 45)
				  check_restock_item(PID_STIMPAK, 1, 3, 100)
				  check_restock_item(PID_14MM_AP, 1, 1, 100)
				  check_restock_item(PID_14MM_PISTOL, 1, 1, 40)
				  check_restock_item(PID_DYNAMITE, 1, 3, 100)
				end else begin
				  check_restock_item(PID_DYNAMITE, 2, 2, 100)
				end 
				check_restock_item(PID_PUMP_PARTS, 1, 2, 25)
				check_restock_item(PID_FLARE, 1, 3, 100)
				set_local_var(1, (random(2, 3) * (24 * (60 * (60 * 10)))) + game_time);
			end
		end
	end
	modoc_jo_box_obj := self_obj;
	if (metarule(22, 0) == 0) then begin
		if (0) then begin
			obj_close(self_obj);
		end
		if (0 and 0) then begin
			obj_lock(self_obj);
		end
	end
end

procedure pickup_p_proc
begin
end

procedure use_p_proc
begin
	caught_tamper := 0;
	user_obj := source_obj;
	if (user_obj != 0) then begin
		if (caught_tamper == 0) then begin
			if (1) then begin
				if (modoc_jo_obj != 0) then begin
					if (has_trait(1, modoc_jo_obj, 666) and ((critter_state(modoc_jo_obj) bwand 1) == 0)) then begin
						if (obj_can_see_obj(modoc_jo_obj, user_obj)) then begin
							caught_tamper := 1;
						end
					end
				end
			end
		end
		if (caught_tamper) then begin
			if (caught_tamper) then begin
				script_overrides;
				add_timer_event(modoc_jo_obj, 0, 1);
			end
		end
	end
end

procedure damage_p_proc
begin
	if (obj_is_locked(self_obj)) then begin
		if (target_obj != 0) then begin
			if (metarule(49, target_obj) == 6) then begin
				if (1) then begin
					display_msg(message_str(1189, 300));
					obj_unlock(self_obj);
				end
				else begin
					display_msg(message_str(1189, 301));
				end
			end
		end
	end
	user_obj := source_obj;
	if (user_obj != 0) then begin
		if (caught_tamper) then begin
			script_overrides;
			add_timer_event(modoc_jo_obj, 0, 1);
		end
	end
end

procedure map_exit_p_proc
begin
	set_local_var(0, local_var(0) bwand (4294967295 - 1024));
end

procedure map_update_p_proc
begin
	modoc_jo_box_obj := self_obj;
	if (0) then begin
		obj_close(self_obj);
	end
	if (0 and 0) then begin
		obj_lock(self_obj);
	end
end

procedure use_obj_on_p_proc
begin
	caught_tamper := 0;
	user_obj := source_obj;
	if (user_obj != 0) then begin
		if (caught_tamper == 0) then begin
			if (1) then begin
				if (modoc_jo_obj != 0) then begin
					if (has_trait(1, modoc_jo_obj, 666) and ((critter_state(modoc_jo_obj) bwand 1) == 0)) then begin
						if (obj_can_see_obj(modoc_jo_obj, user_obj)) then begin
							caught_tamper := 1;
						end
					end
				end
			end
		end
		if (caught_tamper) then begin
			if (caught_tamper) then begin
				script_overrides;
				add_timer_event(modoc_jo_obj, 0, 1);
			end
		end
		else begin
			if (obj_is_locked(self_obj)) then begin
				if (obj_pid(obj_being_used_with) == 84) then begin
					script_overrides;
					if (0) then begin
						if (is_success(roll_vs_skill(user_obj, 9, -20 + 20))) then begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 100));
								if (((local_var(0) bwand 512) != 0) == 0) then begin
									give_exp_points(25);
									display_msg(message_str(14, 100) + 25 + message_str(14, 101));
								end
								set_local_var(0, local_var(0) bwor 512);
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 200));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
							end
							debug_msg("unlock_success_msg");
							obj_unlock(self_obj);
						end
						else begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 101));
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 201));
								end
							end
							debug_msg("unlock_fail_msg");
						end
					end
				end
				else begin
					if (obj_pid(obj_being_used_with) == 410) then begin
						script_overrides;
						if (0) then begin
							if (is_success(roll_vs_skill(user_obj, 9, -20 + 20))) then begin
								script_overrides;
								if (user_obj == dude_obj) then begin
									display_msg(message_str(1189, 100));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
								else begin
									if (user_obj != 0) then begin
										display_msg(obj_name(user_obj) + message_str(1189, 200));
										if (((local_var(0) bwand 512) != 0) == 0) then begin
											give_exp_points(25);
											display_msg(message_str(14, 100) + 25 + message_str(14, 101));
										end
										set_local_var(0, local_var(0) bwor 512);
									end
								end
								debug_msg("unlock_success_msg");
								obj_unlock(self_obj);
							end
							else begin
								script_overrides;
								if (user_obj == dude_obj) then begin
									display_msg(message_str(1189, 101));
								end
								else begin
									if (user_obj != 0) then begin
										display_msg(obj_name(user_obj) + message_str(1189, 201));
									end
								end
								debug_msg("unlock_fail_msg");
							end
						end
					end
					else begin
						if (obj_pid(obj_being_used_with) == 20) then begin
							script_overrides;
							if (is_success(do_check(user_obj, 0, 0))) then begin
								if (user_obj == dude_obj) then begin
									display_msg(message_str(1189, 400));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
								else begin
									if (user_obj != 0) then begin
										display_msg(obj_name(user_obj) + message_str(1189, 500));
										if (((local_var(0) bwand 512) != 0) == 0) then begin
											give_exp_points(25);
											display_msg(message_str(14, 100) + 25 + message_str(14, 101));
										end
										set_local_var(0, local_var(0) bwor 512);
									end
								end
								debug_msg("pry_success_msg");
								obj_unlock(self_obj);
							end
							else begin
								if (user_obj == dude_obj) then begin
									display_msg(message_str(1189, 401));
								end
								else begin
									if (user_obj != 0) then begin
										display_msg(obj_name(user_obj) + message_str(1189, 501));
									end
								end
								debug_msg("pry_fail_msg");
							end
						end
					end
				end
			end
			else begin
				if (obj_pid(obj_being_used_with) == 84) then begin
					script_overrides;
					if (0) then begin
						if (is_success(roll_vs_skill(user_obj, 9, -20 + 40))) then begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 102));
								if (((local_var(0) bwand 512) != 0) == 0) then begin
									give_exp_points(25);
									display_msg(message_str(14, 100) + 25 + message_str(14, 101));
								end
								set_local_var(0, local_var(0) bwor 512);
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 202));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
							end
							debug_msg("lock_success_msg");
							obj_lock(self_obj);
						end
						else begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 103));
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 203));
								end
							end
							debug_msg("lock_fail_msg");
						end
					end
				end
				else begin
					if (obj_pid(obj_being_used_with) == 410) then begin
						script_overrides;
						if (0) then begin
							if (is_success(roll_vs_skill(user_obj, 9, -20 + 40))) then begin
								script_overrides;
								if (user_obj == dude_obj) then begin
									display_msg(message_str(1189, 102));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
								else begin
									if (user_obj != 0) then begin
										display_msg(obj_name(user_obj) + message_str(1189, 202));
										if (((local_var(0) bwand 512) != 0) == 0) then begin
											give_exp_points(25);
											display_msg(message_str(14, 100) + 25 + message_str(14, 101));
										end
										set_local_var(0, local_var(0) bwor 512);
									end
								end
								debug_msg("lock_success_msg");
								obj_lock(self_obj);
							end
							else begin
								script_overrides;
								if (user_obj == dude_obj) then begin
									display_msg(message_str(1189, 103));
								end
								else begin
									if (user_obj != 0) then begin
										display_msg(obj_name(user_obj) + message_str(1189, 203));
									end
								end
								debug_msg("lock_fail_msg");
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure timed_event_p_proc
begin
end

procedure use_skill_on_p_proc
begin
	caught_tamper := 0;
	user_obj := source_obj;
	if (user_obj != 0) then begin
		if (caught_tamper == 0) then begin
			if (1) then begin
				if (modoc_jo_obj != 0) then begin
					if (has_trait(1, modoc_jo_obj, 666) and ((critter_state(modoc_jo_obj) bwand 1) == 0)) then begin
						if (obj_can_see_obj(modoc_jo_obj, user_obj)) then begin
							caught_tamper := 1;
						end
					end
				end
			end
		end
		if (caught_tamper) then begin
			if (caught_tamper) then begin
				script_overrides;
				add_timer_event(modoc_jo_obj, 0, 1);
			end
		end
		else begin
			if (action_being_used == 9) then begin
				script_overrides;
				if (obj_is_locked(self_obj)) then begin
					if (0) then begin
						if (is_success(roll_vs_skill(user_obj, 9, -20))) then begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 100));
								if (((local_var(0) bwand 512) != 0) == 0) then begin
									give_exp_points(25);
									display_msg(message_str(14, 100) + 25 + message_str(14, 101));
								end
								set_local_var(0, local_var(0) bwor 512);
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 200));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
							end
							debug_msg("unlock_success_msg");
							obj_unlock(self_obj);
						end
						else begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 101));
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 201));
								end
							end
							debug_msg("unlock_fail_msg");
						end
					end
				end
				else begin
					if (0) then begin
						if (is_success(roll_vs_skill(user_obj, 9, -20))) then begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 102));
								if (((local_var(0) bwand 512) != 0) == 0) then begin
									give_exp_points(25);
									display_msg(message_str(14, 100) + 25 + message_str(14, 101));
								end
								set_local_var(0, local_var(0) bwor 512);
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 202));
									if (((local_var(0) bwand 512) != 0) == 0) then begin
										give_exp_points(25);
										display_msg(message_str(14, 100) + 25 + message_str(14, 101));
									end
									set_local_var(0, local_var(0) bwor 512);
								end
							end
							debug_msg("lock_success_msg");
							obj_lock(self_obj);
						end
						else begin
							script_overrides;
							if (user_obj == dude_obj) then begin
								display_msg(message_str(1189, 103));
							end
							else begin
								if (user_obj != 0) then begin
									display_msg(obj_name(user_obj) + message_str(1189, 203));
								end
							end
							debug_msg("lock_fail_msg");
						end
					end
				end
			end
			else begin
				if (obj_is_locked(self_obj)) then begin
					script_overrides;
				end
			end
		end
	end
end

