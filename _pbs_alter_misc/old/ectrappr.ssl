variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;
procedure NodeFleeing;
procedure NodeFighting;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;

variable gecko_pelt;
variable gold_gecko_pelt;
variable gecko_pelt_num;
variable gecko_gold_pelt_num;
variable normal_price;
variable golden_price;
variable playerSoldSex;

procedure Node999;
procedure NodeBuyNormal;
procedure NodeBuyGolden;
procedure Node006a;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777718) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777718)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777719) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777719)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777720) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777720)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (local_var(8) == 1) then begin
        if (obj_on_screen(self_obj)) then begin
            if (not(anim_busy(self_obj))) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 6), 0);
                reg_anim_func(3, 0);
            end
        end
        else begin
            add_timer_event(self_obj, 0, 1);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    if (local_var(4) == 0) then begin
        start_gdialog(509, self_obj, 4, -1, -1);
        gdialog_set_barter_mod(-70);
        gsay_start;
        call Node001;
        gsay_end;
        end_dialogue;
        set_local_var(4, 1);
    end
    else begin
        call Node008;
    end
    if (playerSoldSex) then begin
        playerSoldSex := 0;
        if (global_var(6) == 1) then begin
            poison(party_member_obj(16777380), 30);
        end
        else begin
            if (global_var(6) == 2) then begin
                poison(party_member_obj(16777379), 30);
            end
            else begin
                poison(dude_obj, 30);
            end
        end
        call Node006;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                tmp_gen_rep := global_var(0);
                if (has_trait(0, dude_obj, 95)) then begin
                    tmp_gen_rep := global_var(0) * 2;
                end
                if (tmp_gen_rep >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (tmp_gen_rep >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (tmp_gen_rep >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (tmp_gen_rep > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(509, 100));
    end
    else begin
        display_msg(message_str(509, 200));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(509, 101));
    end
    else begin
        display_msg(message_str(509, 102));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 133);
    critter_add_trait(self_obj, 1, 5, 12);
    if ((game_time < 0) and (local_var(9) == 0)) then begin
        set_local_var(7, game_time - 1);
        set_local_var(9, 1);
    end
    if (local_var(7) < game_time) then begin
        restock_amt := random(5, 7);
        if (obj_is_carrying_obj_pid(self_obj, 276) < restock_amt) then begin
            if (80 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 276) < restock_amt) then begin
                    restock_obj := create_object_sid(276, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 276));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 276) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 276);
                        if ((obj_is_carrying_obj_pid(self_obj, 276) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 276) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 276);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 276);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 276) < restock_amt) then begin
                restock_obj := create_object_sid(276, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 276));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 276) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 276);
                    if ((obj_is_carrying_obj_pid(self_obj, 276) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 276) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 276);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 276);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        restock_amt := random(1, 5);
        if (obj_is_carrying_obj_pid(self_obj, 277) < restock_amt) then begin
            if (60 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 277) < restock_amt) then begin
                    restock_obj := create_object_sid(277, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 277));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 277) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 277);
                        if ((obj_is_carrying_obj_pid(self_obj, 277) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 277) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 277);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 277);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 277) < restock_amt) then begin
                restock_obj := create_object_sid(277, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 277));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 277) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 277);
                    if ((obj_is_carrying_obj_pid(self_obj, 277) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 277) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 277);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 277);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        set_local_var(7, (random(6, 12) * (24 * (60 * (60 * 10)))) + game_time);
    end
end

procedure combat_p_proc
begin
    if (critter_is_fleeing(self_obj)) then begin
        if (random(1, 100) <= 20) then begin
            call NodeFleeing;
        end
    end
    else begin
        if (random(1, 100) <= 20) then begin
            call NodeFighting;
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        destroy_object(self_obj);
    end
end

procedure NodeFleeing
begin
    float_msg(self_obj, message_str(509, 136 + random(0, 2)), 8);
end

procedure NodeFighting
begin
    float_msg(self_obj, message_str(509, 130 + random(0, 3)), 2);
end

procedure Node001
begin
    gsay_reply(509, 103);
    giq_option(4, 509, 104, Node002, 50);
    giq_option(4, 509, 105, Node999, 50);
    giq_option(-3, 509, 106, Node007, 50);
end

procedure Node002
begin
    gsay_reply(509, 107);
    giq_option(4, 509, 108, Node003, 50);
    giq_option(4, 509, 109, Node999, 50);
    giq_option(-3, 509, 110, Node999, 50);
end

procedure Node003
begin
    /*variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    gecko_pelt := obj_carrying_pid_obj(self_obj, 276);
    gold_gecko_pelt := obj_carrying_pid_obj(self_obj, 277);
    gecko_pelt_num := obj_is_carrying_obj_pid(self_obj, 276);
    gecko_gold_pelt_num := obj_is_carrying_obj_pid(self_obj, 277);
    LVar0 := has_skill(self_obj, 15) - has_skill(dude_obj, 15);
    if (LVar0 < 0.00000) then begin
        LVar0 := LVar0 * -1;
        LVar1 := 1;
    end
    LVar0 := LVar0 * 1.00000 / 100.00000;
    if (LVar0 > 0.50000) then begin
        LVar0 := 0.50000;
    end
    if (not(LVar1)) then begin
        normal_price := floor(25 + (25 * LVar0));
    end
    else begin
        normal_price := floor(25 - (25 * LVar0));
    end
    if (not(LVar1)) then begin
        golden_price := floor(125 + (125 * LVar0));
    end
    else begin
        golden_price := floor(125 - (125 * LVar0));
    end
    if ((gecko_pelt_num == 0) and (gecko_gold_pelt_num > 0)) then begin
        LVar2 := message_str(509, 140) + gecko_gold_pelt_num + message_str(509, 113);
    end
    else begin
        if ((gecko_pelt_num > 0) and (gecko_gold_pelt_num == 0)) then begin
            LVar2 := message_str(509, 141) + gecko_pelt_num + message_str(509, 112);
        end
        else begin
            if ((gecko_pelt_num == 0) and (gecko_gold_pelt_num == 0)) then begin
                LVar2 := message_str(509, 142);
            end
            else begin
                LVar2 := message_str(509, 111) + gecko_pelt_num + message_str(509, 112) + " " + gecko_gold_pelt_num + message_str(509, 113);
            end
        end
    end
    gsay_reply(509, LVar2);
    if (gecko_pelt_num > 0) then begin
        giq_option(4, 509, message_str(509, 134) + normal_price, NodeBuyNormal, 50);
    end
    if (gecko_gold_pelt_num > 0) then begin
        giq_option(4, 509, message_str(509, 135) + golden_price, NodeBuyGolden, 50);
    end*/
    gdialog_mod_barter(-70);
    giq_option(4, 509, 115, Node999, 50);
end

procedure Node004
begin
    gsay_reply(509, 116);
    giq_option(4, 509, 117, Node999, 50);
end

procedure Node005
begin
    if (global_var(6) == 1) then begin
        gsay_reply(509, 118);
    end
    else begin
        if (global_var(6) == 2) then begin
            gsay_reply(509, 119);
        end
        else begin
            gsay_reply(509, 120);
        end
    end
    giq_option(4, 509, 121, Node006a, 50);
    giq_option(4, 509, 122, Node999, 50);
end

procedure Node006
begin
    gfade_in(1);
    add_obj_to_inven(dude_obj, create_object_sid(276, tile_num(self_obj), 0, -1));
    add_obj_to_inven(dude_obj, create_object_sid(277, tile_num(self_obj), 0, -1));
    set_local_var(8, 1);
    if (global_var(6) == 1) then begin
        display_msg(message_str(509, 123));
    end
    else begin
        if (global_var(6) == 2) then begin
            display_msg(message_str(509, 124));
        end
        else begin
            display_msg(message_str(509, 125));
        end
    end
end

procedure Node007
begin
    add_obj_to_inven(dude_obj, create_object_sid(276, tile_num(self_obj), 0, -1));
    gsay_reply(509, 127);
    giq_option(-3, 509, 128, Node999, 50);
end

procedure Node008
begin
    float_msg(self_obj, message_str(509, 129), 0);
end

procedure Node999
begin
end

procedure NodeBuyNormal
begin
    if (item_caps_total(dude_obj) >= normal_price) then begin
        item_caps_adjust(dude_obj, -normal_price);
        item_caps_adjust(self_obj, normal_price);
        rm_obj_from_inven(self_obj, gecko_pelt);
        add_obj_to_inven(dude_obj, gecko_pelt);
        call Node003;
    end
    else begin
        call Node005;
    end
end

procedure NodeBuyGolden
begin
    if (item_caps_total(dude_obj) >= golden_price) then begin
        item_caps_adjust(dude_obj, -golden_price);
        item_caps_adjust(self_obj, golden_price);
        rm_obj_from_inven(self_obj, gold_gecko_pelt);
        add_obj_to_inven(dude_obj, gold_gecko_pelt);
        call Node003;
    end
    else begin
        call Node005;
    end
end

procedure Node006a
begin
    gfade_out(1);
    playerSoldSex := 1;
    if ((global_var(6) == 1) or (global_var(6) == 2)) then begin
        debug_msg("you are married.");
    end
    else begin
        set_global_var(194, global_var(194) + (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) * 1));
    end
    if (global_var(358) >= 9) then begin
        set_global_var(589, 1);
    end
    if (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) >= 9) then begin
        set_global_var(588, 1);
    end
    if (global_var(590) == 1) then begin
        set_global_var(590, 0);
    end
    set_global_var(358, global_var(358) + 1);
    call Node999;
end

