variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable Finding_New_Tile;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;

variable Only_Once;

#define _BOUNTY_ECROGUE
#include "..\_pbs_main\quests_bounty.h"

procedure checkPartyMembersNearDoor
begin
	if (party_member_obj(16777278) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777376) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777377) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777305) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777313) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777323) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777352) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777378) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777368) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777379) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777380) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777295) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777381) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777407) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777411) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777412) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777413) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777481) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777558) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
			return 1;
		end
	end
	if (party_member_obj(16777600) != 0) then begin
		if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
			return 1;
		end
	end
	return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
	variable msg;
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (i_am_bounty) then msg := random(240, 244);
		else msg := random(205, 212);
		float_msg(self_obj, message_str(624, msg), 8);
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure pickup_p_proc
begin
	attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
end

procedure destroy_p_proc
begin
	call bounty_hook_destroy;
	if (source_obj == dude_obj) then begin
		set_global_var(4, global_var(4) + 1);
		if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
			set_global_var(3, 1);
			set_global_var(2, 0);
		end
		if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
			set_global_var(2, 1);
			set_global_var(3, 0);
		end
		set_global_var(0, global_var(0) - 5);
		debug_msg("Player gains " + (-5) + " Karma Points.");
		set_global_var(37, 0);
		set_global_var(38, 0);
		set_global_var(39, 0);
		set_global_var(40, 0);
		set_global_var(41, 0);
		set_global_var(42, 0);
		set_global_var(43, 0);
		set_global_var(44, 0);
		set_global_var(45, 0);
		if (global_var(0) >= 1000) then begin
			set_global_var(37, 1);
		end
		else
		if (global_var(0) >= 750) then begin
			set_global_var(38, 1);
		end
		else
		if (global_var(0) >= 500) then begin
			set_global_var(39, 1);
		end
		else
		if (global_var(0) >= 250) then begin
			set_global_var(40, 1);
		end
		else
		if (global_var(0) > -250) then begin
			set_global_var(41, 1);
		end
		else
		if (global_var(0) > -500) then begin
			set_global_var(42, 1);
		end
		else
		if (global_var(0) > -750) then begin
			set_global_var(43, 1);
		end
		else
		if (global_var(0) > -1000) then begin
			set_global_var(44, 1);
		end
		else begin
			set_global_var(45, 1);
		end
	end
	if (cur_map_index == 94) then begin
		set_map_var(1, map_var(1) - 1);
	end
end

procedure damage_p_proc
begin
	attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
end

procedure map_enter_p_proc
begin
	Only_Once := 0;
	critter_add_trait(self_obj, 1, 6, 179);
	critter_add_trait(self_obj, 1, 5, 22);
	call bounty_hook_map_enter;
end

procedure description_p_proc
begin
	script_overrides;
	if (i_am_bounty) then display_msg(message_str(624, 105));
	else display_msg(message_str(624, 104));
end

procedure look_at_p_proc
begin
	script_overrides;
	if (i_am_bounty) then display_msg(message_str(624, 105));
	else display_msg(message_str(624, 104));
end

