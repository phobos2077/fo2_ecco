[SELL]
; player SELLS to merchant
;
; price = base * Bias
;           * (1 + DudeSkillCoef * dude_barter)  // dude skill multiplier
;           * (1 + MerchantSkillCoef * merchant_barter)  // merchant skill multiplier
;           * (1 + BarterModCoef * barter_mod)  // barter mod multiplier
;           * (1 + PerkCoef * master_trader);  // perk multiplier
;
; where "base" is base item price (set in prototypes),
;    "price" is price you will see in game,
;    "dude_barter" is player's barter skill in %s (0..300),
;    "merchant_barter" is the barter skill of merchant,
;    "master_trader" is Master Trader perk (0..1)
;    "barter_mod" is set in scripts on specific events (like getting a discount for a quest) (-40..no upper limit)
;
; NOTE: with this formula, all variables (skills, reputation, etc.) affect final price independently. 
; It means that, if all other variables are constant, given variable will always affect final price in the same way 
; (eg. Master Trader perk will always add 25%, etc.)
;
; NOTE: If you want to make selling prices constant like in vanilla game, set all Coefs to 0 and Bias to 1

; base multiplier (affected further by PRICE_PER_TYPE multipliers)
Bias=0.3
; party skill coefficient
DudeSkillCoef=0.01
; merchant skill coefficient
MerchantSkillCoef=-0.0015
; Master Trader perk coefficient
PerkCoef=0.10
; Barter Mod coefficient
BarterModCoef=0.0

; maximum selling price multiplier (applied per item type after multipliers in PRICE_PER_TYPE)
MaxPriceCoef=0.6


[PRICE_PER_TYPE]
; Multiplies prices of items by type, but only when selling to merchent. Range: [0.0, 1.0].
0=0.7 ; armor
1=1.0 ; container
2=0.8 ; drug
3=0.7 ; weapon
4=1.0 ; ammo
5=1.0 ; misc_item
6=1.0 ; key_item


[BUY]
; player BUYS from a merchant:
;
; price = base * Bias
;              * skill_contest_mult                                       // skill based multipliers, based on selected formula below
;              * (1 + BarterModCoef * barter_mod)                         // barter mod multiplier
;              * (1 + PerkCoef * master_trader)                           // perk multiplier (on or off)
;              * (1 + PartySkillCoef * MAX(party_skill - PartySkillThreshold, 0));    // party discount multiplier 
;
; where "party_skill" is the highest Barter Skill amongst party member, NOT including player.
;
; select desired formula for skill_contest_mult (number):
;
; 0: (vanilla-esque, but with configurable parameters)
; skill_contest_mult = (MerchantSkillOffset + merchant_barter) / (DudeSkillOffset + dude_barter)
;
; 1,2: OBSOLETE
;
; 3: 
; skill_contest_mult = (1 + DudeSkillCoef * dude_barter) * (1 + MerchantSkillCoef * merchant_barter)
;
; 4: (like 3 but uses arctangent function)
; skill_contest_mult = (1 + arctan(ArctanCoef * dude_barter) * DudeSkillCoef) * (1 + MerchantSkillCoef * merchant_barter)
;
;
; NOTE: VANILLA formula for comparison:
; price = base * 2
;              * (160.0 + merchant_barter)
;              / (160.0 + party_barter)
;              * (barter_mod + 100.0 - master_trader_mod) * 0.01
;
; where "master_trader_mod" is 25 or 0 and "party_barter" is highest barter in party, including player.

; The following are balanced settings:
; - around 40% lower prices than vanilla on average (increased value of money)
; - a little higher than that in early game,
; - equal to 60% of vanilla at around 60-80 barter, 
; - slightly lower than 60% vanilla at high barter (increased player price/skill curvature)
; - merchant price/skill curvature decreased slightly, to account for sell price changes

Formula=0
; base multiplier
Bias=0.84
; dude skill offset (for vanilla-esque formula), higher value = lower effect of skill on result, and vice versa
DudeSkillOffset=120
; merchant skill offset (for vanilla-esque formula), changing the ratio of these offsets require changing the Bias to compensate
MerchantSkillOffset=200
; dude skill coefficient
DudeSkillCoef=-0.54
; merchant skill coefficient
MerchantSkillCoef=0.005
; Master Trader perk coefficient
PerkCoef=-0.25
; Barter Mod coefficient
BarterModCoef=0.005
; You need to plot arctangent function against barter skill (0..300) to understand how this works
ArctanCoef=0.013
; If one of party members (not player) has barter higher than this, then multiplier as applied
PartySkillThreshold=30
; Party skill coefficient
; Example: with Threshold of 30 and Coef of -0.005, you get 10% discount for having Sulik ((50-30)*(-0.005) = -0.1) and 25% for Cassidy ((80-30)*(-0.005) = -0.25)
PartySkillCoef=-0.003

; minimum price multiplier (set higher than SELL|MaxPriceCoef to prevent explots)
MinPriceCoef=0.6


[GENERAL]
; Allows to disable the whole mod.
Enabled=1
; Reduces money in party once with a specified multiplier (for existing saves)
PartyMoneyMult=0.8


[TOWNDEMAND]
; Town demand system allows to have a different prices for items based on town/area.
;
; NOTE: these multipliers apply separately from the ones in SELL/BUY sections and aren't affected by MinPriceCoef/MaxPriceCoef.
;
; town ID's:
; AREA_ARROYO                 (0)
; AREA_DEN                    (1)
; AREA_KLAMATH                (2)
; AREA_MODOC                  (3)
; AREA_VAULT_CITY             (4)
; AREA_GECKO                  (5)
; AREA_BROKEN_HILLS           (6)
; AREA_NEW_RENO               (7)
; AREA_SIERRA_ARMY_BASE       (8)
; AREA_VAULT_15               (9)
; AREA_NCR                    (10)
; AREA_VAULT_13               (11)
; AREA_MILITARY_BASE          (12)
; AREA_REDDING                (13)
; AREA_SAN_FRANCISCO          (14)
; AREA_NAVARRO                (15)
; AREA_THE_ENCLAVE            (16)
; AREA_ABBEY                  (17)
; AREA_PRIMITIVE_TRIBE        (18)
; AREA_EPA                    (19)
; AREA_GHOST_TOWN             (20)
; AREA_RAIDERS                (25)
;
; format:
; TOWN_ID=ITEM1_PID*MULT1|ITEM2_PID*MULT2|.... (repeat)
; lines limited to 255 symbols
; example (makes Gecko Pelts cost twice in Klamath):
; 2=276*2.00|277*2.00
; 
;
; Den: pelts, tails and hides cost a little more (no logic, just balance)
1=276*1.1|277*1.1|533*1.1|92*1.1|591*1.1|623*1.1
; Klamath: pelts and tails cost more, stimpacks less, rope less (illogical, but balanced)
2=276*1.3|277*1.3|533*1.3|92*1.2|591*1.2|40*0.8|127*0.8
; Modoc: pelts and hides
3=276*1.3|277*1.3|533*1.3|623*1.3
; Vault City: cheaper medicine (stimpacks, antidote, radaway, radx)
4=40*0.8|144*0.8|49*0.8|48*0.8|109*0.8
; Gecko: many junk, do need for rad drugs, geiger counter
5=98*0.5|48*0.8|109*0.8|52*0.7
; Broken Hills: wanamingo hand, demand on explosives
6=625*1.2|51*1.2|85*1.2
; New Reno: jet produced nearby (sell in Redding for profit)
7=259*0.5
; NCR: iguana on a stick
10=81*0.7
; Redding: mine scrips, wanamingo hand, high demand on jet, demand on explosives
13=494*5.0|420*5.0|625*1.2|259*2.5|51*1.2|85*1.2


[MISC_ITEM_CHARGES_COST_FRACTION]
; Sets how much of a total price of these misc items is affected by current charges. Range: [0.0, 1.0].
47=0.8  ; First Aid Kit
91=0.8  ; Doctor's Bag
408=0.8 ; Field medic's kit
409=0.8 ; Paramedic's bag

52=0.5 ; Geiger Counter
54=0.5 ; Stealth Boy
59=0.5 ; Motion Sensor

618=1.0 ; Spike Trap
645=0.7 ; Bear Trap
